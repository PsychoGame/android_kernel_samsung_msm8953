--- original/sound/soc/msm/msm-cpe-lsm.c	2020-05-07 08:31:28.691761105 +0200
+++ changed/sound/soc/msm/msm-cpe-lsm.c	2019-06-03 13:39:55.000000000 +0200
@@ -2162,8 +2162,7 @@ static int msm_cpe_lsm_ioctl(struct snd_
 			dev_err(rtd->dev,
 				"%s: %s: not supported if using topology\n",
 				__func__, "LSM_REG_SND_MODEL_V2");
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		if (copy_from_user(&snd_model, (void *)arg,
@@ -2296,8 +2295,7 @@ static int msm_cpe_lsm_ioctl(struct snd_
 			dev_err(rtd->dev,
 				"%s: %s: not supported if using topology\n",
 				__func__, "SNDRV_LSM_SET_PARAMS");
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		if (copy_from_user(&det_params, (void *) arg,
@@ -2324,16 +2322,14 @@ static int msm_cpe_lsm_ioctl(struct snd_
 			dev_err(rtd->dev,
 				"%s: %s: not supported if not using topology\n",
 				__func__, "SET_MODULE_PARAMS");
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		if (!arg) {
 			dev_err(rtd->dev,
 				"%s: %s: No Param data to set\n",
 				__func__, "SET_MODULE_PARAMS");
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		if (copy_from_user(&p_data, arg,
@@ -2341,8 +2337,7 @@ static int msm_cpe_lsm_ioctl(struct snd_
 			dev_err(rtd->dev,
 				"%s: %s: copy_from_user failed, size = %zd\n",
 				__func__, "p_data", sizeof(p_data));
-			err = -EFAULT;
-			goto done;
+			return -EFAULT;
 		}
 
 		if (p_data.num_params > LSM_PARAMS_MAX) {
@@ -2350,8 +2345,7 @@ static int msm_cpe_lsm_ioctl(struct snd_
 				"%s: %s: Invalid num_params %d\n",
 				__func__, "SET_MODULE_PARAMS",
 				p_data.num_params);
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		p_size = p_data.num_params *
@@ -2362,15 +2356,12 @@ static int msm_cpe_lsm_ioctl(struct snd_
 				"%s: %s: Invalid size %zd\n",
 				__func__, "SET_MODULE_PARAMS", p_size);
 
-			err = -EFAULT;
-			goto done;
+			return -EFAULT;
 		}
 
 		params = kzalloc(p_size, GFP_KERNEL);
-		if (!params) {
-			err = -ENOMEM;
-			goto done;
-		}
+		if (!params)
+			return -ENOMEM;
 
 		if (copy_from_user(params, p_data.params,
 				   p_data.data_size)) {
@@ -2378,8 +2369,7 @@ static int msm_cpe_lsm_ioctl(struct snd_
 				"%s: %s: copy_from_user failed, size = %d\n",
 				__func__, "params", p_data.data_size);
 			kfree(params);
-			err = -EFAULT;
-			goto done;
+			return -EFAULT;
 		}
 
 		err = msm_cpe_lsm_process_params(substream, &p_data, params);
@@ -2490,8 +2480,7 @@ static int msm_cpe_lsm_ioctl_compat(stru
 			dev_err(rtd->dev,
 				"%s: %s: not supported if using topology\n",
 				__func__, "LSM_REG_SND_MODEL_V2_32");
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		dev_dbg(rtd->dev,
@@ -2711,9 +2700,7 @@ static int msm_cpe_lsm_ioctl_compat(stru
 			dev_err(rtd->dev,
 				"%s: %s: not supported if using topology\n",
 				__func__, "SNDRV_LSM_SET_PARAMS32");
-
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		if (copy_from_user(&det_params32, arg,
@@ -2757,8 +2744,7 @@ static int msm_cpe_lsm_ioctl_compat(stru
 			dev_err(rtd->dev,
 				"%s: %s: not supported if not using topology\n",
 				__func__, "SET_MODULE_PARAMS_32");
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		if (copy_from_user(&p_data_32, arg,
@@ -2767,8 +2753,7 @@ static int msm_cpe_lsm_ioctl_compat(stru
 				"%s: %s: copy_from_user failed, size = %zd\n",
 				__func__, "SET_MODULE_PARAMS_32",
 				sizeof(p_data_32));
-			err = -EFAULT;
-			goto done;
+			return -EFAULT;
 		}
 
 		p_data.params = compat_ptr(p_data_32.params);
@@ -2780,8 +2765,7 @@ static int msm_cpe_lsm_ioctl_compat(stru
 				"%s: %s: Invalid num_params %d\n",
 				__func__, "SET_MODULE_PARAMS_32",
 				p_data.num_params);
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		if (p_data.data_size !=
@@ -2790,25 +2774,21 @@ static int msm_cpe_lsm_ioctl_compat(stru
 				"%s: %s: Invalid size %d\n",
 				__func__, "SET_MODULE_PARAMS_32",
 				p_data.data_size);
-			err = -EINVAL;
-			goto done;
+			return -EINVAL;
 		}
 
 		p_size = sizeof(struct lsm_params_info_32) *
 			 p_data.num_params;
 
 		params32 = kzalloc(p_size, GFP_KERNEL);
-		if (!params32) {
-			err = -ENOMEM;
-			goto done;
-		}
+		if (!params32)
+			return -ENOMEM;
 
 		p_size = sizeof(struct lsm_params_info) * p_data.num_params;
 		params = kzalloc(p_size, GFP_KERNEL);
 		if (!params) {
 			kfree(params32);
-			err = -ENOMEM;
-			goto done;
+			return -ENOMEM;
 		}
 
 		if (copy_from_user(params32, p_data.params,
@@ -2818,8 +2798,7 @@ static int msm_cpe_lsm_ioctl_compat(stru
 				__func__, "params32", p_data.data_size);
 			kfree(params32);
 			kfree(params);
-			err = -EFAULT;
-			goto done;
+			return -EFAULT;
 		}
 
 		p_info_32 = (struct lsm_params_info_32 *) params32;

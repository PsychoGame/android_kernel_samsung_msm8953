--- original/arch/arm64/kernel/traps.c	2020-05-07 08:31:20.403835666 +0200
+++ changed/arch/arm64/kernel/traps.c	2019-06-03 13:39:48.000000000 +0200
@@ -42,6 +42,13 @@
 #include <asm/esr.h>
 #include <asm/edac.h>
 
+#include <linux/sec_debug.h>
+#include <linux/sec_debug_summary.h>
+
+#ifdef CONFIG_USER_RESET_DEBUG
+#include <linux/user_reset/sec_debug_user_reset.h>
+#endif
+
 #include <trace/events/exception.h>
 
 static const char *handler[]= {
@@ -207,6 +214,17 @@ static int __die(const char *str, int er
 		 TASK_COMM_LEN, tsk->comm, task_pid_nr(tsk), thread + 1);
 
 	if (!user_mode(regs) || in_interrupt()) {
+#ifdef CONFIG_SEC_DEBUG
+		if (THREAD_SIZE + (unsigned long)task_stack_page(tsk) - regs->sp
+			> THREAD_SIZE) {
+			dump_mem(KERN_EMERG, "Stack: ", regs->sp,
+					THREAD_SIZE/4 + regs->sp);
+		} else {
+			dump_mem(KERN_EMERG, "Stack: ", regs->sp,
+					THREAD_SIZE + (unsigned long)task_stack_page(tsk));
+		}
+#endif
+
 		dump_backtrace(regs, tsk);
 		dump_instr(KERN_EMERG, regs);
 	}
@@ -224,6 +242,7 @@ static unsigned long oops_begin(void)
 	unsigned long flags;
 
 	oops_enter();
+	secdbg_sched_msg("!!die!!");
 
 	/* racy, but better than risking deadlock. */
 	raw_local_irq_save(flags);
@@ -279,6 +298,8 @@ void die(const char *str, struct pt_regs
 	if (bug_type != BUG_TRAP_TYPE_NONE)
 		str = "Oops - BUG";
 
+	sec_debug_save_die_info(str, regs);
+
 	ret = __die(str, err, thread, regs);
 
 	oops_end(flags, regs, ret);
@@ -509,6 +530,11 @@ asmlinkage void bad_mode(struct pt_regs
 {
 	console_verbose();
 
+#ifdef CONFIG_USER_RESET_DEBUG
+	sec_debug_save_badmode_info(reason, handler[reason],
+			esr, esr_get_class_string(esr));
+#endif
+
 	pr_crit("Bad mode in %s handler detected, code 0x%08x -- %s\n",
 		handler[reason], esr, esr_get_class_string(esr));
 

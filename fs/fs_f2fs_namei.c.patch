--- original/fs/f2fs/namei.c	2020-05-07 08:51:35.252253897 +0200
+++ changed/fs/f2fs/namei.c	2019-06-03 13:39:53.000000000 +0200
@@ -51,6 +51,10 @@ static struct inode *f2fs_new_inode(stru
 
 	inode->i_ino = ino;
 	inode->i_blocks = 0;
+
+	if (IS_I_VERSION(inode))
+		inode->i_version++;
+
 	inode->i_mtime = inode->i_atime = inode->i_ctime =
 			F2FS_I(inode)->i_crtime = current_time(inode);
 	inode->i_generation = sbi->s_next_generation++;
@@ -293,7 +297,8 @@ static int f2fs_create(struct inode *dir
 
 	f2fs_alloc_nid_done(sbi, ino);
 
-	d_instantiate_new(dentry, inode);
+	unlock_new_inode(inode);
+	d_instantiate(dentry, inode);
 
 	if (IS_DIRSYNC(dir))
 		f2fs_sync_fs(sbi->sb, 1);
@@ -593,7 +598,8 @@ static int f2fs_symlink(struct inode *di
 	err = page_symlink(inode, disk_link.name, disk_link.len);
 
 err_out:
-	d_instantiate_new(dentry, inode);
+	unlock_new_inode(inode);
+	d_instantiate(dentry, inode);
 
 	/*
 	 * Let's flush symlink data in order to avoid broken symlink as much as
@@ -654,7 +660,8 @@ static int f2fs_mkdir(struct inode *dir,
 
 	f2fs_alloc_nid_done(sbi, inode->i_ino);
 
-	d_instantiate_new(dentry, inode);
+	unlock_new_inode(inode);
+	d_instantiate(dentry, inode);
 
 	if (IS_DIRSYNC(dir))
 		f2fs_sync_fs(sbi->sb, 1);
@@ -705,7 +712,8 @@ static int f2fs_mknod(struct inode *dir,
 
 	f2fs_alloc_nid_done(sbi, inode->i_ino);
 
-	d_instantiate_new(dentry, inode);
+	unlock_new_inode(inode);
+	d_instantiate(dentry, inode);
 
 	if (IS_DIRSYNC(dir))
 		f2fs_sync_fs(sbi->sb, 1);

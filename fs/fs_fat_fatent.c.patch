--- original/fs/fat/fatent.c	2020-05-07 08:06:20.137204353 +0200
+++ changed/fs/fat/fatent.c	2019-06-03 13:39:53.000000000 +0200
@@ -170,9 +170,10 @@ static void fat12_ent_put(struct fat_ent
 	}
 	spin_unlock(&fat12_entry_lock);
 
-	mark_buffer_dirty_inode(fatent->bhs[0], fatent->fat_inode);
-	if (fatent->nr_bhs == 2)
-		mark_buffer_dirty_inode(fatent->bhs[1], fatent->fat_inode);
+	mark_buffer_dirty_inode_sync(fatent->bhs[0], fatent->fat_inode);
+	if (fatent->nr_bhs == 2){
+		mark_buffer_dirty_inode_sync(fatent->bhs[1], fatent->fat_inode);
+	}
 }
 
 static void fat16_ent_put(struct fat_entry *fatent, int new)
@@ -181,7 +182,7 @@ static void fat16_ent_put(struct fat_ent
 		new = EOF_FAT16;
 
 	*fatent->u.ent16_p = cpu_to_le16(new);
-	mark_buffer_dirty_inode(fatent->bhs[0], fatent->fat_inode);
+	mark_buffer_dirty_inode_sync(fatent->bhs[0], fatent->fat_inode);
 }
 
 static void fat32_ent_put(struct fat_entry *fatent, int new)
@@ -189,7 +190,7 @@ static void fat32_ent_put(struct fat_ent
 	WARN_ON(new & 0xf0000000);
 	new |= le32_to_cpu(*fatent->u.ent32_p) & ~0x0fffffff;
 	*fatent->u.ent32_p = cpu_to_le32(new);
-	mark_buffer_dirty_inode(fatent->bhs[0], fatent->fat_inode);
+	mark_buffer_dirty_inode_sync(fatent->bhs[0], fatent->fat_inode);
 }
 
 static int fat12_ent_next(struct fat_entry *fatent)
@@ -394,7 +395,7 @@ static int fat_mirror_bhs(struct super_b
 			}
 			memcpy(c_bh->b_data, bhs[n]->b_data, sb->s_blocksize);
 			set_buffer_uptodate(c_bh);
-			mark_buffer_dirty_inode(c_bh, sbi->fat_inode);
+			mark_buffer_dirty_inode_sync(c_bh, sbi->fat_inode);
 			if (sb->s_flags & MS_SYNCHRONOUS)
 				err = sync_dirty_buffer(c_bh);
 			brelse(c_bh);

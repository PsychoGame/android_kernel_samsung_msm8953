--- original/fs/ext4/block_validity.c	2020-05-07 08:06:20.081204904 +0200
+++ changed/fs/ext4/block_validity.c	2019-06-03 13:39:53.000000000 +0200
@@ -137,6 +137,12 @@ static void debug_print_tree(struct ext4
 	printk("\n");
 }
 
+#ifdef VERIFY_META_ONLY
+struct rb_root *ext4_system_zone_root(struct super_block *sb)
+{
+	return &EXT4_SB(sb)->system_blks;
+}
+#endif
 int ext4_setup_system_zone(struct super_block *sb)
 {
 	ext4_group_t ngroups = ext4_get_groups_count(sb);
@@ -197,8 +203,10 @@ void ext4_release_system_zone(struct sup
 int ext4_data_block_valid(struct ext4_sb_info *sbi, ext4_fsblk_t start_blk,
 			  unsigned int count)
 {
+#ifndef VERIFY_META_ONLY
 	struct ext4_system_zone *entry;
 	struct rb_node *n = sbi->system_blks.rb_node;
+#endif
 
 	if ((start_blk <= le32_to_cpu(sbi->s_es->s_first_data_block)) ||
 	    (start_blk + count < start_blk) ||
@@ -206,6 +214,7 @@ int ext4_data_block_valid(struct ext4_sb
 		sbi->s_es->s_last_error_block = cpu_to_le64(start_blk);
 		return 0;
 	}
+#ifndef VERIFY_META_ONLY
 	while (n) {
 		entry = rb_entry(n, struct ext4_system_zone, node);
 		if (start_blk + count - 1 < entry->start_blk)
@@ -217,6 +226,7 @@ int ext4_data_block_valid(struct ext4_sb
 			return 0;
 		}
 	}
+#endif
 	return 1;
 }
 

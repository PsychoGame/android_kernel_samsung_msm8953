--- original/kernel/auditsc.c	2020-05-07 08:31:27.381772890 +0200
+++ changed/kernel/auditsc.c	2019-06-03 13:39:53.000000000 +0200
@@ -1350,6 +1350,9 @@ static void audit_log_exit(struct audit_
 	/* tsk == current */
 	context->personality = tsk->personality;
 
+// [ SEC_SELINUX_PORTING_COMMON
+	if (context->major != __NR_setsockopt  && context->major != 294 ) {
+// ] SEC_SELINUX_PORTING_COMMON
 	ab = audit_log_start(context, GFP_KERNEL, AUDIT_SYSCALL);
 	if (!ab)
 		return;		/* audit_panic has been called */
@@ -1373,6 +1376,7 @@ static void audit_log_exit(struct audit_
 	audit_log_task_info(ab, tsk);
 	audit_log_key(ab, context->filterkey);
 	audit_log_end(ab);
+	
 
 	for (aux = context->aux; aux; aux = aux->next) {
 
@@ -1458,7 +1462,9 @@ static void audit_log_exit(struct audit_
 	}
 
 	audit_log_proctitle(tsk, context);
-
+// [ SEC_SELINUX_PORTING_COMMON
+	} // End of context->major != __NR_setsockopt
+// ] SEC_SELINUX_PORTING_COMMON
 	/* Send end of event record to help user space know we are finished */
 	ab = audit_log_start(context, GFP_KERNEL, AUDIT_EOE);
 	if (ab)
@@ -2331,15 +2337,15 @@ int __audit_signal_info(int sig, struct
 	struct audit_context *ctx = tsk->audit_context;
 	kuid_t uid = current_uid(), t_uid = task_uid(t);
 
-	if (audit_pid && t->tgid == audit_pid) {
-		if (sig == SIGTERM || sig == SIGHUP || sig == SIGUSR1 || sig == SIGUSR2) {
+	if ((audit_pid && t->tgid == audit_pid)
+		&& (sig == SIGTERM || sig == SIGHUP || sig == SIGUSR1 || sig == SIGUSR2)
+	) {
 			audit_sig_pid = task_tgid_nr(tsk);
 			if (uid_valid(tsk->loginuid))
 				audit_sig_uid = tsk->loginuid;
 			else
 				audit_sig_uid = uid;
 			security_task_getsecid(tsk, &audit_sig_sid);
-		}
 	}
 
 	if (!audit_signals || audit_dummy_context())

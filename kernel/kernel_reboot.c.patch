--- original/kernel/reboot.c	2020-05-07 08:06:22.254183552 +0200
+++ changed/kernel/reboot.c	2019-06-03 13:39:53.000000000 +0200
@@ -16,6 +16,7 @@
 #include <linux/syscalls.h>
 #include <linux/syscore_ops.h>
 #include <linux/uaccess.h>
+#include <linux/sec_monitor_battery_removal.h>
 
 /*
  * this indicates whether you can reboot with ctrl-alt-del: the default is yes
@@ -43,6 +44,7 @@ int reboot_default = 1;
 int reboot_cpu;
 enum reboot_type reboot_type = BOOT_ACPI;
 int reboot_force;
+int ignore_fs_panic = 0; // To prevent kernel panic by EIO during shutdown
 
 /*
  * If set, this is used for preparing the system to power off.
@@ -69,7 +71,9 @@ void kernel_restart_prepare(char *cmd)
 {
 	blocking_notifier_call_chain(&reboot_notifier_list, SYS_RESTART, cmd);
 	system_state = SYSTEM_RESTART;
+	freeze_processes();
 	usermodehelper_disable();
+	ignore_fs_panic = 1;
 	device_shutdown();
 }
 
@@ -213,6 +217,7 @@ void migrate_to_reboot_cpu(void)
  */
 void kernel_restart(char *cmd)
 {
+	sec_set_normal_pwroff(NORMAL_POWEROFF);
 	kernel_restart_prepare(cmd);
 	migrate_to_reboot_cpu();
 	syscore_shutdown();
@@ -230,7 +235,9 @@ static void kernel_shutdown_prepare(enum
 	blocking_notifier_call_chain(&reboot_notifier_list,
 		(state == SYSTEM_HALT) ? SYS_HALT : SYS_POWER_OFF, NULL);
 	system_state = state;
+	freeze_processes();
 	usermodehelper_disable();
+	ignore_fs_panic = 1;
 	device_shutdown();
 }
 /**
@@ -256,6 +263,7 @@ EXPORT_SYMBOL_GPL(kernel_halt);
  */
 void kernel_power_off(void)
 {
+	sec_set_normal_pwroff(NORMAL_POWEROFF);
 	kernel_shutdown_prepare(SYSTEM_POWER_OFF);
 	if (pm_power_off_prepare)
 		pm_power_off_prepare();

--- original/kernel/trace/ipc_logging_debug.c	2020-05-07 08:06:22.389182225 +0200
+++ changed/kernel/trace/ipc_logging_debug.c	2019-06-03 13:39:54.000000000 +0200
@@ -12,6 +12,8 @@
  */
 
 #include <linux/slab.h>
+#include <linux/mm.h>
+#include <linux/vmalloc.h>
 #include <linux/uaccess.h>
 #include <linux/module.h>
 #include <linux/fs.h>
@@ -77,20 +79,31 @@ static ssize_t debug_read_helper(struct
 	struct ipc_log_context *ilctxt = file->private_data;
 	char *buffer;
 	int bsize;
+	gfp_t gfp = GFP_KERNEL;
 
-	buffer = kmalloc(count, GFP_KERNEL);
+	if (count > (MAX_ORDER_NR_PAGES << PAGE_SHIFT)) {
+		pr_err("%s: error count %lu bytes is too big, max: %lu bytes\n",
+			__func__, (unsigned long)count,
+			(unsigned long)MAX_ORDER_NR_PAGES << PAGE_SHIFT);
+		return -ENOMEM;
+	}
+	if (count > PAGE_SIZE)
+		gfp |= __GFP_NORETRY | __GFP_NOWARN | __GFP_NO_KSWAPD;
+	buffer = kmalloc(count, gfp);
+	if (!buffer && count > PAGE_SIZE)
+		buffer = vmalloc(count);
 	if (!buffer)
 		return -ENOMEM;
 
 	bsize = debug_log(ilctxt, buffer, count, cont);
 	if (bsize > 0) {
 		if (copy_to_user(buff, buffer, bsize)) {
-			kfree(buffer);
+			kvfree(buffer);
 			return -EFAULT;
 		}
 		*ppos += bsize;
 	}
-	kfree(buffer);
+	kvfree(buffer);
 	return bsize;
 }
 

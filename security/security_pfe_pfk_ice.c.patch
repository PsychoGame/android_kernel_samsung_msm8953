--- original/security/pfe/pfk_ice.c	2020-05-07 08:06:23.812168242 +0200
+++ changed/security/pfe/pfk_ice.c	2019-06-03 13:39:54.000000000 +0200
@@ -42,21 +42,16 @@
 #define TZ_ES_SET_ICE_KEY_ID \
 	TZ_SYSCALL_CREATE_SMC_ID(TZ_OWNER_SIP, TZ_SVC_ES, TZ_ES_SET_ICE_KEY)
 
-
 #define TZ_ES_INVALIDATE_ICE_KEY_ID \
-		TZ_SYSCALL_CREATE_SMC_ID(TZ_OWNER_SIP, \
-			TZ_SVC_ES, TZ_ES_INVALIDATE_ICE_KEY)
-
+	TZ_SYSCALL_CREATE_SMC_ID(TZ_OWNER_SIP, \
+		TZ_SVC_ES, TZ_ES_INVALIDATE_ICE_KEY)
 
-#define TZ_ES_SET_ICE_KEY_PARAM_ID \
-	TZ_SYSCALL_CREATE_PARAM_ID_5( \
-		TZ_SYSCALL_PARAM_TYPE_VAL, \
-		TZ_SYSCALL_PARAM_TYPE_BUF_RW, TZ_SYSCALL_PARAM_TYPE_VAL, \
-		TZ_SYSCALL_PARAM_TYPE_BUF_RW, TZ_SYSCALL_PARAM_TYPE_VAL)
+#define TZ_ES_SET_ICE_KEY_PARAM_ID TZ_SYSCALL_CREATE_PARAM_ID_6( \
+	TZ_SYSCALL_PARAM_TYPE_VAL, TZ_SYSCALL_PARAM_TYPE_BUF_RW, TZ_SYSCALL_PARAM_TYPE_VAL, \
+		TZ_SYSCALL_PARAM_TYPE_BUF_RW, TZ_SYSCALL_PARAM_TYPE_VAL, TZ_SYSCALL_PARAM_TYPE_VAL)
 
-#define TZ_ES_INVALIDATE_ICE_KEY_PARAM_ID \
-	TZ_SYSCALL_CREATE_PARAM_ID_1( \
-	TZ_SYSCALL_PARAM_TYPE_VAL)
+#define TZ_ES_INVALIDATE_ICE_KEY_PARAM_ID TZ_SYSCALL_CREATE_PARAM_ID_2( \
+	TZ_SYSCALL_PARAM_TYPE_VAL, TZ_SYSCALL_PARAM_TYPE_VAL
 
 #define ICE_KEY_SIZE 32
 #define ICE_SALT_SIZE 32
@@ -102,8 +97,17 @@ int qti_pfk_ice_set_key(uint32_t index,
 	desc.args[2] = tzbuflen_key;
 	desc.args[3] = virt_to_phys(tzbuf_salt);
 	desc.args[4] = tzbuflen_salt;
+#ifdef CONFIG_SCSI_UFSHCD
+	desc.args[5] = 10;
+#else
+	desc.args[5] = 20;
+#endif
 
+#ifdef CONFIG_SCSI_UFSHCD
 	ret = qcom_ice_setup_ice_hw("ufs", true);
+#else
+	ret = qcom_ice_setup_ice_hw("sdcc", true);
+#endif
 	if (ret) {
 		pr_err("%s: could not enable clocks: 0x%x\n", __func__, ret);
 		return ret;
@@ -111,7 +115,11 @@ int qti_pfk_ice_set_key(uint32_t index,
 
 	ret = scm_call2(smc_id, &desc);
 
+#ifdef CONFIG_SCSI_UFSHCD
 	qcom_ice_setup_ice_hw("ufs", false);
+#else
+	qcom_ice_setup_ice_hw("sdcc", false);
+#endif
 
 	pr_debug(" %s , ret = %d\n", __func__, ret);
 	if (ret) {
@@ -143,7 +151,11 @@ int qti_pfk_ice_invalidate_key(uint32_t
 	desc.arginfo = TZ_ES_INVALIDATE_ICE_KEY_PARAM_ID;
 	desc.args[0] = index;
 
+#ifdef CONFIG_SCSI_UFSHCD
 	ret = qcom_ice_setup_ice_hw("ufs", true);
+#else
+	ret = qcom_ice_setup_ice_hw("sdcc", true);
+#endif
 	if (ret) {
 		pr_err("%s: could not enable clocks: 0x%x\n", __func__, ret);
 		return ret;
@@ -151,7 +163,11 @@ int qti_pfk_ice_invalidate_key(uint32_t
 
 	ret = scm_call2(smc_id, &desc);
 
+#ifdef CONFIG_SCSI_UFSHCD
 	qcom_ice_setup_ice_hw("ufs", false);
+#else
+	qcom_ice_setup_ice_hw("sdcc", false);
+#endif
 
 	pr_debug(" %s , ret = %d\n", __func__, ret);
 	if (ret)

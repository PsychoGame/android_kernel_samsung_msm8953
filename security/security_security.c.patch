--- original/security/security.c	2020-05-07 08:31:28.425763498 +0200
+++ changed/security/security.c	2019-06-03 13:39:54.000000000 +0200
@@ -20,6 +20,7 @@
 #include <linux/integrity.h>
 #include <linux/ima.h>
 #include <linux/evm.h>
+#include <linux/proca.h>
 #include <linux/fsnotify.h>
 #include <linux/mman.h>
 #include <linux/mount.h>
@@ -27,6 +28,7 @@
 #include <linux/backing-dev.h>
 #include <linux/pfk.h>
 #include <net/flow.h>
+#include <linux/task_integrity.h>
 
 #define MAX_LSM_EVM_XATTR	2
 
@@ -244,6 +246,9 @@ int security_bprm_check(struct linux_bin
 	ret = security_ops->bprm_check_security(bprm);
 	if (ret)
 		return ret;
+	ret = five_bprm_check(bprm);
+	if (ret)
+		return ret;
 	return ima_bprm_check(bprm);
 }
 
@@ -634,6 +639,9 @@ int security_inode_setxattr(struct dentr
 	ret = security_ops->inode_setxattr(dentry, name, value, size, flags);
 	if (ret)
 		return ret;
+	ret = five_inode_setxattr(dentry, name, value, size);
+	if (ret)
+		return ret;
 	ret = ima_inode_setxattr(dentry, name, value, size);
 	if (ret)
 		return ret;
@@ -672,6 +680,9 @@ int security_inode_removexattr(struct de
 	ret = security_ops->inode_removexattr(dentry, name);
 	if (ret)
 		return ret;
+	ret = five_inode_removexattr(dentry, name);
+	if (ret)
+		return ret;
 	ret = ima_inode_removexattr(dentry, name);
 	if (ret)
 		return ret;
@@ -734,6 +745,9 @@ int security_file_alloc(struct file *fil
 void security_file_free(struct file *file)
 {
 	security_ops->file_free_security(file);
+#ifdef CONFIG_PROCA
+	proca_compat_file_free_security_hook(file);
+#endif
 }
 
 int security_file_ioctl(struct file *file, unsigned int cmd, unsigned long arg)
@@ -783,6 +797,9 @@ int security_mmap_file(struct file *file
 					mmap_prot(file, prot), flags);
 	if (ret)
 		return ret;
+	ret = five_file_mmap(file, prot);
+	if (ret)
+		return ret;
 	return ima_file_mmap(file, prot);
 }
 
@@ -831,7 +848,11 @@ int security_file_open(struct file *file
 	if (ret)
 		return ret;
 
-	return fsnotify_perm(file, MAY_OPEN);
+	ret = fsnotify_perm(file, MAY_OPEN);
+	if (ret)
+		return ret;
+
+	return five_file_open(file, cred);
 }
 
 bool security_allow_merge_bio(struct bio *bio1, struct bio *bio2)
@@ -855,6 +876,10 @@ void security_task_free(struct task_stru
 	yama_task_free(task);
 #endif
 	security_ops->task_free(task);
+	five_task_free(task);
+#ifdef CONFIG_PROCA
+	proca_compat_task_free_hook(task);
+#endif
 }
 
 int security_cred_alloc_blank(struct cred *cred, gfp_t gfp)

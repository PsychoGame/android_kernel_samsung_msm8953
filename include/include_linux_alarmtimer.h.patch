--- original/include/linux/alarmtimer.h	2020-05-07 08:47:58.835373707 +0200
+++ changed/include/linux/alarmtimer.h	2019-06-03 13:39:53.000000000 +0200
@@ -21,6 +21,12 @@ enum alarmtimer_restart {
 
 #define ALARMTIMER_STATE_INACTIVE	0x00
 #define ALARMTIMER_STATE_ENQUEUED	0x01
+#define pr_alarm(debug_level_mask, args...) \
+	do { \
+		if (debug_mask & ANDROID_ALARM_PRINT_##debug_level_mask) { \
+			pr_info(args); \
+		} \
+	} while (0)
 
 /**
  * struct alarm - Alarm timer structure
@@ -48,6 +54,9 @@ int alarm_start_relative(struct alarm *a
 void alarm_restart(struct alarm *alarm);
 int alarm_try_to_cancel(struct alarm *alarm);
 int alarm_cancel(struct alarm *alarm);
+#ifdef CONFIG_RTC_AUTO_PWRON
+int alarm_set_alarm(char *alarm_data);
+#endif /* CONFIG_AUTO_PWRON */
 
 u64 alarm_forward(struct alarm *alarm, ktime_t now, ktime_t interval);
 u64 alarm_forward_now(struct alarm *alarm, ktime_t interval);
@@ -55,6 +64,9 @@ ktime_t alarm_expires_remaining(const st
 
 /* Provide way to access the rtc device being used by alarmtimers */
 struct rtc_device *alarmtimer_get_rtcdev(void);
+#if defined(CONFIG_RTC_AUTO_PWRON)
+int alarm_set_alarm_boot(char *alarm_data);
+#endif
 #ifdef CONFIG_RTC_DRV_QPNP
 extern bool poweron_alarm;
 #endif

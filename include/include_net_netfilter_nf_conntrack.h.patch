--- original/include/net/netfilter/nf_conntrack.h	2020-05-07 08:31:27.157774905 +0200
+++ changed/include/net/netfilter/nf_conntrack.h	2019-06-03 13:39:53.000000000 +0200
@@ -27,6 +27,11 @@
 
 #include <net/netfilter/nf_conntrack_tuple.h>
 
+/* START_OF_KNOX_NPA */
+#define PROCESS_NAME_LEN_NAP	128
+#define DOMAIN_NAME_LEN_NAP	255
+/* END_OF_KNOX_NPA */
+
 #define SIP_LIST_ELEMENTS	2
 
 struct sip_length {
@@ -142,6 +147,39 @@ struct nf_conn {
 
 	/* Storage reserved for other modules, must be the last member */
 	union nf_conntrack_proto proto;
+
+	/* START_OF_KNOX_NPA */
+	/* The number of application layer bytes sent by the socket */
+	__u64   knox_sent;
+	/* The number of application layer bytes recieved by the socket */
+	__u64   knox_recv;
+	/* The uid which created the socket */
+	uid_t   knox_uid;
+	/* The pid under which the socket was created */
+	pid_t   knox_pid;
+	/* The parent user id under which the socket was created */
+	uid_t   knox_puid;
+	/* The epoch time at which the socket was opened */
+	__u64   open_time;
+	/* The name of the process which created the socket */
+	char process_name[PROCESS_NAME_LEN_NAP];
+	/* The name of the parent process which created the socket */
+	char parent_process_name[PROCESS_NAME_LEN_NAP];
+	/*  The Domain name associated with the ip address of the socket. The size needs to be in sync with the userspace implementation */
+	char domain_name[DOMAIN_NAME_LEN_NAP];
+	/* The parent process id under which the socket was created */
+	pid_t   knox_ppid;
+	/* The interface used by the flow to transmit packet */
+	char interface_name[IFNAMSIZ];
+	/* Atomic variable indicating start of flow */
+	atomic_t startFlow;
+	/* The value at which this ct is considered timed-out for intermediate flows */
+	/* Use 'u32 npa_timeout' if struct nf_conn->timeout is of type u32;  Use 'struct timer_list npa_timeout' if struct nf_conn->timeout is of type struct timer_list;*/
+	struct timer_list npa_timeout;
+	/* Atomic variable indicating end of intermediate flow */
+	atomic_t intermediateFlow;
+	/* END_OF_KNOX_NPA */
+
 };
 
 static inline struct nf_conn *

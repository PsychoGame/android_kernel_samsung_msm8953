--- original/include/uapi/media/msm_camsensor_sdk.h	2020-05-07 08:31:27.347773196 +0200
+++ changed/include/uapi/media/msm_camsensor_sdk.h	2019-06-03 13:39:53.000000000 +0200
@@ -176,21 +176,39 @@ enum actuator_type {
 	ACTUATOR_PIEZO,
 	ACTUATOR_HVCM,
 	ACTUATOR_BIVCM,
+	ACTUATOR_HALL_EFFECT,
 };
 
 enum msm_flash_driver_type {
 	FLASH_DRIVER_PMIC,
 	FLASH_DRIVER_I2C,
 	FLASH_DRIVER_GPIO,
+	FLASH_DRIVER_EXT_PMIC,
 	FLASH_DRIVER_DEFAULT
 };
 
+enum flash_position_t {
+	REAR,
+	FRONT,
+
+	INVALID_FLASH_POSITION
+};
+
+enum flash_operation_type_t {
+	MONO,
+	DUAL,
+
+	INVALID_FLASH_OPERATION_TYPE
+};
+
 enum msm_flash_cfg_type_t {
 	CFG_FLASH_INIT,
 	CFG_FLASH_RELEASE,
 	CFG_FLASH_OFF,
 	CFG_FLASH_LOW,
 	CFG_FLASH_HIGH,
+	CFG_FLASH_TORCH,
+	CFG_FLASH_TORCH_SET_CURRENT
 };
 
 enum msm_ir_led_cfg_type_t {
@@ -215,6 +233,69 @@ enum msm_ir_cut_cfg_type_t {
 #define CFG_IR_CUT_OFF CFG_IR_CUT_OFF
 #define CFG_IR_CUT_ON CFG_IR_CUT_ON
 
+#if defined (CONFIG_CAMERA_SYSFS_V2)
+enum msm_camera_cam_info_isp {
+	CAM_INFO_ISP_TYPE_INTERNAL = 0,
+	CAM_INFO_ISP_TYPE_EXTERNAL,
+	CAM_INFO_ISP_TYPE_SOC,
+};
+
+enum msm_camera_cam_info_cal_mem {
+	CAM_INFO_CAL_MEM_TYPE_NONE = 0,
+	CAM_INFO_CAL_MEM_TYPE_FROM,
+	CAM_INFO_CAL_MEM_TYPE_EEPROM,
+	CAM_INFO_CAL_MEM_TYPE_OTP,
+};
+
+enum msm_camera_cam_info_read_ver {
+	CAM_INFO_READ_VER_SYSFS = 0,
+	CAM_INFO_READ_VER_CAMON,
+};
+
+enum msm_camera_cam_info_core_voltage {
+	CAM_INFO_CORE_VOLT_NONE = 0,
+	CAM_INFO_CORE_VOLT_USE,
+};
+
+enum msm_camera_cam_info_upgrade {
+	CAM_INFO_FW_UPGRADE_NONE = 0,
+	CAM_INFO_FW_UPGRADE_SYSFS,
+	CAM_INFO_FW_UPGRADE_CAMON,
+};
+
+enum msm_camera_cam_info_fw_write {
+	CAM_INFO_FW_WRITE_NONE = 0,
+	CAM_INFO_FW_WRITE_OS,
+	CAM_INFO_FW_WRITE_SD,
+	CAM_INFO_FW_WRITE_ALL,
+};
+
+enum msm_camera_cam_info_fw_dump {
+	CAM_INFO_FW_DUMP_NONE = 0,
+	CAM_INFO_FW_DUMP_USE,
+};
+
+enum msm_camera_cam_info_companion {
+	CAM_INFO_COMPANION_NONE = 0,
+	CAM_INFO_COMPANION_USE,
+};
+
+enum msm_camera_cam_info_ois {
+	CAM_INFO_OIS_NONE = 0,
+	CAM_INFO_OIS_USE,
+};
+
+enum msm_camera_cam_info_valid {
+	CAM_INFO_INVALID = 0,
+	CAM_INFO_VALID,
+};
+
+enum msm_camera_cam_info_dual_open {
+	CAM_INFO_DUALOPEN_NONE = 0,
+	CAM_INFO_DUALOPEN_USE,
+};
+#endif
+
 enum msm_sensor_output_format_t {
 	MSM_SENSOR_BAYER,
 	MSM_SENSOR_YCBCR,

--- original/drivers/clk/msm/clock-gcc-8953.c	2020-05-07 08:31:21.388826805 +0200
+++ changed/drivers/clk/msm/clock-gcc-8953.c	2019-06-03 13:39:49.000000000 +0200
@@ -40,6 +40,8 @@
 
 #include "clock.h"
 
+#define CAMSS_GP1_24MHZ_JITTER_CORRECTION
+
 enum {
 	GCC_BASE,
 	GFX_BASE,
@@ -730,6 +732,7 @@ static struct rcg_clk blsp1_qup1_i2c_app
 
 static struct clk_freq_tbl ftbl_blsp_spi_apps_clk_src[] = {
 	F(    960000,              xo,   10,    1,     2),
+	F(   4000000, gpll0_main_div2,   10,    1,    10),
 	F(   4800000,              xo,    4,    0,     0),
 	F(   9600000,              xo,    2,    0,     0),
 	F(  12500000, gpll0_main_div2,   16,    1,     2),
@@ -1131,6 +1134,8 @@ static struct rcg_clk csi2p_clk_src = {
 };
 
 static struct clk_freq_tbl ftbl_camss_gp0_clk_src[] = {
+	F(19200000,           xo,    1,    0,    0),
+	F(24000000,           gpll0,    1,    2,    67),
 	F(  50000000, gpll0_main_div2,    8,    0,     0),
 	F( 100000000,           gpll0,    8,    0,     0),
 	F( 200000000,           gpll0,    4,    0,     0),
@@ -1154,11 +1159,17 @@ static struct rcg_clk camss_gp0_clk_src
 };
 
 static struct clk_freq_tbl ftbl_camss_gp1_clk_src[] = {
-	F(  50000000, gpll0_main_div2,    8,    0,     0),
-	F( 100000000,           gpll0,    8,    0,     0),
-	F( 200000000,           gpll0,    4,    0,     0),
-	F( 266670000,           gpll0,    3,    0,     0),
-	F_END
+		F(	19200000,			   xo,	   1,	 0, 	0),
+#ifdef CAMSS_GP1_24MHZ_JITTER_CORRECTION
+		F(	24000000,			gpll0,	  1,	2,	  67),
+#else
+		F(	24000000,			gpll0,	  1,	3,	 100),
+#endif
+		F(	50000000, gpll0_main_div2,	  8,	0,	   0),
+		F( 100000000,			gpll0,	  8,	0,	   0),
+		F( 200000000,			gpll0,	  4,	0,	   0),
+		F( 266670000,			gpll0,	  3,	0,	   0),
+		F_END
 };
 
 static struct rcg_clk camss_gp1_clk_src = {
@@ -1494,7 +1505,11 @@ static struct rcg_clk byte1_clk_src = {
 };
 
 static struct clk_freq_tbl ftbl_esc0_clk_src[] = {
-	F(  19200000,             xo,    1,    0,     0),
+#if defined(CONFIG_SAMSUNG_12_8MHZ_ESC_CLOCK)
+	F(	12800000,		xo,		1.5,	0,		0),
+#else
+	F(  19200000,		xo,		1,		0,     	0),
+#endif
 	F_END
 };
 
@@ -2789,7 +2804,7 @@ static struct branch_clk gcc_oxili_timer
 	.base = &virt_bases[GFX_BASE],
 	.c = {
 		.dbg_name = "gcc_oxili_timer_clk",
-		.parent = &xo_clk_src.c,
+		.parent = &xo_clk_src.c, 
 		.ops = &clk_ops_branch,
 		CLK_INIT(gcc_oxili_timer_clk.c),
 	},
@@ -2952,6 +2967,7 @@ static struct branch_clk gcc_usb3_aux_cl
 static struct branch_clk gcc_usb_phy_cfg_ahb_clk = {
 	.cbcr_reg = USB_PHY_CFG_AHB_CBCR,
 	.has_sibling = 1,
+	.check_enable_bit = true,
 	.no_halt_check_on_disable = true,
 	.base = &virt_bases[GCC_BASE],
 	.c = {

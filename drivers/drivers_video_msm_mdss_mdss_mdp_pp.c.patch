--- original/drivers/video/msm/mdss/mdss_mdp_pp.c	2020-05-07 08:31:26.125784190 +0200
+++ changed/drivers/video/msm/mdss/mdss_mdp_pp.c	2019-06-03 13:39:53.000000000 +0200
@@ -596,9 +596,8 @@ static void mdss_mdp_hist_irq_set_mask(u
 static void mdss_mdp_hist_irq_clear_mask(u32 irq);
 static void mdss_mdp_hist_intr_notify(u32 disp);
 static int mdss_mdp_panel_default_dither_config(struct msm_fb_data_type *mfd,
-					u32 panel_bpp, bool enable);
-static int mdss_mdp_limited_lut_igc_config(struct msm_fb_data_type *mfd,
-					bool enable);
+					u32 panel_bpp);
+static int mdss_mdp_limited_lut_igc_config(struct msm_fb_data_type *mfd);
 static inline int pp_validate_dspp_mfd_block(struct msm_fb_data_type *mfd,
 					int block);
 static int pp_mfd_release_all(struct msm_fb_data_type *mfd);
@@ -3050,8 +3049,7 @@ int mdss_mdp_pp_overlay_init(struct msm_
 }
 
 int mdss_mdp_pp_default_overlay_config(struct msm_fb_data_type *mfd,
-					struct mdss_panel_data *pdata,
-					bool enable)
+					struct mdss_panel_data *pdata)
 {
 	int ret = 0;
 
@@ -3060,14 +3058,13 @@ int mdss_mdp_pp_default_overlay_config(s
 		return -EINVAL;
 	}
 
-	ret = mdss_mdp_panel_default_dither_config(mfd, pdata->panel_info.bpp,
-						enable);
+	ret = mdss_mdp_panel_default_dither_config(mfd, pdata->panel_info.bpp);
 	if (ret)
 		pr_err("Unable to configure default dither on fb%d ret %d\n",
 			mfd->index, ret);
 
 	if (pdata->panel_info.type == DTV_PANEL) {
-		ret = mdss_mdp_limited_lut_igc_config(mfd, enable);
+		ret = mdss_mdp_limited_lut_igc_config(mfd);
 		if (ret)
 			pr_err("Unable to configure DTV panel default IGC ret %d\n",
 				ret);
@@ -3757,8 +3754,7 @@ static void pp_update_igc_lut(struct mdp
 		writel_relaxed((cfg->c2_data[i] & 0xFFF) | data, addr);
 }
 
-static int mdss_mdp_limited_lut_igc_config(struct msm_fb_data_type *mfd,
-					bool enable)
+static int mdss_mdp_limited_lut_igc_config(struct msm_fb_data_type *mfd)
 {
 	int ret = 0;
 	u32 copyback = 0;
@@ -3783,10 +3779,7 @@ static int mdss_mdp_limited_lut_igc_conf
 		pr_err("failed to get default IGC version, ret %d\n", ret);
 
 	config.version = igc_version.version_info;
-	if (enable)
-		config.ops = MDP_PP_OPS_WRITE | MDP_PP_OPS_ENABLE;
-	else
-		config.ops = MDP_PP_OPS_DISABLE;
+	config.ops = MDP_PP_OPS_WRITE | MDP_PP_OPS_ENABLE;
 	config.block = (mfd->index) + MDP_LOGICAL_BLOCK_DISP_0;
 	switch (config.version) {
 	case mdp_igc_v1_7:
@@ -4376,7 +4369,7 @@ enhist_config_exit:
 }
 
 static int mdss_mdp_panel_default_dither_config(struct msm_fb_data_type *mfd,
-					u32 panel_bpp, bool enable)
+					u32 panel_bpp)
 {
 	int ret = 0;
 	struct mdp_dither_cfg_data dither;
@@ -4401,58 +4394,55 @@ static int mdss_mdp_panel_default_dither
 		return ret;
 	}
 	dither.version = dither_version.version_info;
-	dither.cfg_payload = NULL;
 
-	if (enable) {
-		switch (panel_bpp) {
-		case 24:
-			dither.flags = MDP_PP_OPS_ENABLE | MDP_PP_OPS_WRITE;
-			switch (dither.version) {
-			case mdp_dither_v1_7:
-				dither_data.g_y_depth = 8;
-				dither_data.r_cr_depth = 8;
-				dither_data.b_cb_depth = 8;
-				/*
-				 * Use default dither table by setting len to 0
-				 */
-				dither_data.len = 0;
-				dither.cfg_payload = &dither_data;
-				break;
-			case mdp_pp_legacy:
-			default:
-				dither.g_y_depth = 8;
-				dither.r_cr_depth = 8;
-				dither.b_cb_depth = 8;
-				dither.cfg_payload = NULL;
-				break;
-			}
+	switch (panel_bpp) {
+	case 24:
+		dither.flags = MDP_PP_OPS_ENABLE | MDP_PP_OPS_WRITE;
+		switch (dither.version) {
+		case mdp_dither_v1_7:
+			dither_data.g_y_depth = 8;
+			dither_data.r_cr_depth = 8;
+			dither_data.b_cb_depth = 8;
+			/*
+			 * Use default dither table by setting len to 0
+			 */
+			dither_data.len = 0;
+			dither.cfg_payload = &dither_data;
 			break;
-		case 18:
-			dither.flags = MDP_PP_OPS_ENABLE | MDP_PP_OPS_WRITE;
-			switch (dither.version) {
-			case mdp_dither_v1_7:
-				dither_data.g_y_depth = 6;
-				dither_data.r_cr_depth = 6;
-				dither_data.b_cb_depth = 6;
-				/*
-				 * Use default dither table by setting len to 0
-				 */
-				dither_data.len = 0;
-				dither.cfg_payload = &dither_data;
-				break;
-			case mdp_pp_legacy:
-			default:
-				dither.g_y_depth = 6;
-				dither.r_cr_depth = 6;
-				dither.b_cb_depth = 6;
-				dither.cfg_payload = NULL;
-				break;
-			}
+		case mdp_pp_legacy:
+		default:
+			dither.g_y_depth = 8;
+			dither.r_cr_depth = 8;
+			dither.b_cb_depth = 8;
+			dither.cfg_payload = NULL;
 			break;
+		}
+		break;
+	case 18:
+		dither.flags = MDP_PP_OPS_ENABLE | MDP_PP_OPS_WRITE;
+		switch (dither.version) {
+		case mdp_dither_v1_7:
+			dither_data.g_y_depth = 6;
+			dither_data.r_cr_depth = 6;
+			dither_data.b_cb_depth = 6;
+			/*
+			 * Use default dither table by setting len to 0
+			 */
+			dither_data.len = 0;
+			dither.cfg_payload = &dither_data;
+			break;
+		case mdp_pp_legacy:
 		default:
+			dither.g_y_depth = 6;
+			dither.r_cr_depth = 6;
+			dither.b_cb_depth = 6;
 			dither.cfg_payload = NULL;
 			break;
 		}
+		break;
+	default:
+		dither.cfg_payload = NULL;
+		break;
 	}
 	ret = mdss_mdp_dither_config(mfd, &dither, NULL, true);
 	if (ret)

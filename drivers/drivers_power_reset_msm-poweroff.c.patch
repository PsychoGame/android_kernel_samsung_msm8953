--- original/drivers/power/reset/msm-poweroff.c	2020-05-07 08:31:24.861795561 +0200
+++ changed/drivers/power/reset/msm-poweroff.c	2019-06-03 13:39:52.000000000 +0200
@@ -33,6 +33,8 @@
 #include <soc/qcom/restart.h>
 #include <soc/qcom/watchdog.h>
 
+#include <linux/sec_debug.h>
+
 #define EMERGENCY_DLOAD_MAGIC1    0x322A4F99
 #define EMERGENCY_DLOAD_MAGIC2    0xC67E4350
 #define EMERGENCY_DLOAD_MAGIC3    0x77777777
@@ -129,7 +131,7 @@ int scm_set_dload_mode(int arg1, int arg
 				&desc);
 }
 
-static void set_dload_mode(int on)
+void set_dload_mode(int on)
 {
 	int ret;
 
@@ -145,13 +147,17 @@ static void set_dload_mode(int on)
 		pr_err("Failed to set secure DLOAD mode: %d\n", ret);
 
 	dload_mode_enabled = on;
+
+#ifdef CONFIG_SEC_DEBUG
+	pr_err("set_dload_mode <%d> ( %lx )\n", on, CALLER_ADDR0);
+#endif
 }
 
 static bool get_dload_mode(void)
 {
 	return dload_mode_enabled;
 }
-
+#if 0
 static void enable_emergency_dload_mode(void)
 {
 	int ret;
@@ -176,6 +182,7 @@ static void enable_emergency_dload_mode(
 	if (ret)
 		pr_err("Failed to set secure EDLOAD mode: %d\n", ret);
 }
+#endif
 
 static int dload_set(const char *val, struct kernel_param *kp)
 {
@@ -268,6 +275,7 @@ static void msm_restart_prepare(const ch
 {
 	bool need_warm_reset = false;
 
+#ifndef CONFIG_SEC_DEBUG
 #ifdef CONFIG_MSM_DLOAD_MODE
 
 	/* Write download mode flags if we're panic'ing
@@ -278,6 +286,9 @@ static void msm_restart_prepare(const ch
 	set_dload_mode(download_mode &&
 			(in_panic || restart_mode == RESTART_DLOAD));
 #endif
+#else /* CONFIG_SEC_DEBUG */
+	sec_debug_update_dload_mode(restart_mode, in_panic);
+#endif /* CONFIG_SEC_DEBUG */
 
 	if (qpnp_pon_check_hard_reset_stored()) {
 		/* Set warm reset as true when device is in dload mode */
@@ -330,13 +341,17 @@ static void msm_restart_prepare(const ch
 			if (!ret)
 				__raw_writel(0x6f656d00 | (code & 0xff),
 					     restart_reason);
+#if 0
 		} else if (!strncmp(cmd, "edl", 3)) {
 			enable_emergency_dload_mode();
+#endif
 		} else {
 			__raw_writel(0x77665501, restart_reason);
 		}
 	}
 
+	sec_debug_update_restart_reason(cmd, in_panic);
+
 	flush_cache_all();
 
 	/*outer_flush_all is not supported by 64bit kernel*/
@@ -375,6 +390,7 @@ static void do_msm_restart(enum reboot_m
 	pr_notice("Going down for restart now\n");
 
 	msm_restart_prepare(cmd);
+	pr_info("%s: end of msm_restart_pareare\n",__func__);
 
 #ifdef CONFIG_MSM_DLOAD_MODE
 	/*
@@ -382,8 +398,10 @@ static void do_msm_restart(enum reboot_m
 	 * device will take the usual restart path.
 	 */
 
-	if (WDOG_BITE_ON_PANIC && in_panic)
+	if (WDOG_BITE_ON_PANIC && in_panic) {
+		printk(KERN_NOTICE " WDOG_BITE_ON_PANIC : %d, in_panic : %d\n", WDOG_BITE_ON_PANIC, in_panic);
 		msm_trigger_wdog_bite();
+	}
 #endif
 
 	scm_disable_sdi();

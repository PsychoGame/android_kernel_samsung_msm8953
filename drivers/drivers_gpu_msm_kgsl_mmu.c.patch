--- original/drivers/gpu/msm/kgsl_mmu.c	2020-05-07 08:06:11.538288848 +0200
+++ changed/drivers/gpu/msm/kgsl_mmu.c	2019-06-03 13:39:50.000000000 +0200
@@ -24,6 +24,10 @@
 #include "kgsl_device.h"
 #include "kgsl_sharedmem.h"
 
+#if defined(CONFIG_DISPLAY_SAMSUNG)
+#include <linux/delay.h>
+#endif
+
 static void pagetable_remove_sysfs_objects(struct kgsl_pagetable *pagetable);
 
 static void kgsl_destroy_pagetable(struct kref *kref)
@@ -389,6 +393,10 @@ kgsl_mmu_map(struct kgsl_pagetable *page
 	int ret = 0;
 	int size;
 
+#if defined(CONFIG_DISPLAY_SAMSUNG)
+	int retry_cnt;
+#endif
+
 	if (!memdesc->gpuaddr)
 		return -EINVAL;
 	/* Only global mappings should be mapped multiple times */
@@ -401,6 +409,21 @@ kgsl_mmu_map(struct kgsl_pagetable *page
 	if (PT_OP_VALID(pagetable, mmu_map))
 		ret = pagetable->pt_ops->mmu_map(pagetable, memdesc);
 
+#if defined(CONFIG_DISPLAY_SAMSUNG)
+		if (ret != 0 && !in_interrupt()) {
+			for (retry_cnt = 0; retry_cnt < 62 ; retry_cnt++) {
+				/* To wait free page by memory reclaim*/
+				usleep_range(16000, 16000);
+
+				pr_err("kgsl_mmu_map failed : retry (%d) ret : %d\n", retry_cnt, ret);
+
+				ret = pagetable->pt_ops->mmu_map(pagetable, memdesc);
+				if (ret == 0)
+					break;
+			}
+		}
+#endif
+
 	if (ret)
 		return ret;
 

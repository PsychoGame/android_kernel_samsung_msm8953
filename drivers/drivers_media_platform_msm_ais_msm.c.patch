--- original/drivers/media/platform/msm/ais/msm.c	2020-05-07 08:31:23.600806905 +0200
+++ changed/drivers/media/platform/msm/ais/msm.c	2019-06-03 13:39:50.000000000 +0200
@@ -292,7 +292,6 @@ void msm_delete_stream(unsigned int sess
 		return;
 
 	while (1) {
-		unsigned long wl_flags;
 
 		if (try_count > 5) {
 			pr_err("%s : not able to delete stream %d\n",
@@ -300,20 +299,18 @@ void msm_delete_stream(unsigned int sess
 			break;
 		}
 
-		write_lock_irqsave(&session->stream_rwlock, wl_flags);
+		write_lock(&session->stream_rwlock);
 		try_count++;
 		stream = msm_queue_find(&session->stream_q, struct msm_stream,
 			list, __msm_queue_find_stream, &stream_id);
 
 		if (!stream) {
-			write_unlock_irqrestore(&session->stream_rwlock,
-				wl_flags);
+			write_unlock(&session->stream_rwlock);
 			return;
 		}
 
 		if (msm_vb2_get_stream_state(stream) != 1) {
-			write_unlock_irqrestore(&session->stream_rwlock,
-				wl_flags);
+			write_unlock(&session->stream_rwlock);
 			continue;
 		}
 
@@ -323,7 +320,7 @@ void msm_delete_stream(unsigned int sess
 		kfree(stream);
 		stream = NULL;
 		spin_unlock_irqrestore(&(session->stream_q.lock), flags);
-		write_unlock_irqrestore(&session->stream_rwlock, wl_flags);
+		write_unlock(&session->stream_rwlock);
 		break;
 	}
 
@@ -394,9 +391,6 @@ static void msm_add_sd_in_position(struc
 	struct msm_sd_subdev *temp_sd;
 
 	list_for_each_entry(temp_sd, sd_list, list) {
-		if (temp_sd == msm_subdev) {
-			return;
-		}
 		if (msm_subdev->close_seq < temp_sd->close_seq) {
 			list_add_tail(&msm_subdev->list, &temp_sd->list);
 			return;

--- original/drivers/usb/gadget/function/u_serial.c	2020-05-07 08:31:25.931785935 +0200
+++ changed/drivers/usb/gadget/function/u_serial.c	2019-06-03 13:39:52.000000000 +0200
@@ -789,8 +789,17 @@ static int gs_start_io(struct gs_port *p
 	port->n_read = 0;
 	started = gs_start_rx(port);
 
-	if (!port->port_usb)
+	if (!port->port_usb)  {
+		printk(KERN_ERR "usb:[%s] port_usb or port_usb is NULL!! started(%d)\n",
+				__func__, started);
+		return -EIO;
+	}
+
+	if (!port->port.tty) {
+		printk(KERN_ERR "usb:[%s] port_usb or port_tty is NULL!! started(%d)\n",
+				__func__, started);
 		return -EIO;
+	}
 	/* unblock any pending writes into our circular buffer */
 	if (started) {
 		tty_wakeup(port->port.tty);
@@ -1278,12 +1287,19 @@ static ssize_t debug_read_status(struct
 	int ret;
 	int result = 0;
 
-	if (!ui_dev)
+	if (!ui_dev) {
+		printk(KERN_ERR "usb: ui_dev is NULL !!\n");
 		return -EINVAL;
+	}
 
 	tty = ui_dev->port.tty;
 	gser = ui_dev->port_usb;
 
+	if(!tty || !gser) {
+		printk(KERN_ERR "usb: tty or gser is NULL !!\n");
+		return -EINVAL;
+	}
+
 	buf = kzalloc(sizeof(char) * BUF_SIZE, GFP_KERNEL);
 	if (!buf)
 		return -ENOMEM;

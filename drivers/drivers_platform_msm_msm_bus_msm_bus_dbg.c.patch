--- original/drivers/platform/msm/msm_bus/msm_bus_dbg.c	2020-05-07 08:06:16.504240052 +0200
+++ changed/drivers/platform/msm/msm_bus/msm_bus_dbg.c	2019-06-03 13:39:51.000000000 +0200
@@ -291,7 +291,6 @@ static ssize_t client_data_read(struct f
 	const struct msm_bus_client_handle *handle = file->private_data;
 	int found = 0;
 	ssize_t ret;
-
 	rt_mutex_lock(&msm_bus_dbg_cllist_lock);
 	list_for_each_entry(cldata, &cl_list, list) {
 		if ((cldata->clid == cl) ||
@@ -361,7 +360,6 @@ int msm_bus_dbg_rec_transaction(const st
 	struct timespec ts;
 	bool found = false;
 	char *buf = NULL;
-
 	rt_mutex_lock(&msm_bus_dbg_cllist_lock);
 	list_for_each_entry(cldata, &cl_list, list) {
 		if (cldata->handle == pdata) {
@@ -381,6 +379,7 @@ int msm_bus_dbg_rec_transaction(const st
 			rt_mutex_unlock(&msm_bus_dbg_cllist_lock);
 			return -EINVAL;
 		}
+		pr_err("\n%s setting up debugfs %s", __func__, pdata->name);
 		cldata->file = debugfs_create_file(pdata->name, S_IRUGO,
 				clients, (void *)pdata, &client_data_fops);
 	}
@@ -408,7 +407,6 @@ int msm_bus_dbg_rec_transaction(const st
 	i += scnprintf(buf + i, MAX_BUFF_SIZE - i, "\n");
 	cldata->size = i;
 	rt_mutex_unlock(&msm_bus_dbg_cllist_lock);
-
 	trace_bus_update_request((int)ts.tv_sec, (int)ts.tv_nsec,
 		pdata->name, pdata->mas, pdata->slv, ab, ib);
 
@@ -418,7 +416,6 @@ int msm_bus_dbg_rec_transaction(const st
 void msm_bus_dbg_remove_client(const struct msm_bus_client_handle *pdata)
 {
 	struct msm_bus_cldata *cldata = NULL;
-
 	rt_mutex_lock(&msm_bus_dbg_cllist_lock);
 	list_for_each_entry(cldata, &cl_list, list) {
 		if (cldata->handle == pdata) {
@@ -455,7 +452,6 @@ static int msm_bus_dbg_record_client(con
 static void msm_bus_dbg_free_client(uint32_t clid)
 {
 	struct msm_bus_cldata *cldata = NULL;
-
 	rt_mutex_lock(&msm_bus_dbg_cllist_lock);
 	list_for_each_entry(cldata, &cl_list, list) {
 		if (cldata->clid == clid) {
@@ -476,7 +472,6 @@ static int msm_bus_dbg_fill_cl_buffer(co
 	struct msm_bus_cldata *cldata = NULL;
 	struct timespec ts;
 	int found = 0;
-
 	rt_mutex_lock(&msm_bus_dbg_cllist_lock);
 	list_for_each_entry(cldata, &cl_list, list) {
 		if (cldata->clid == clid) {
@@ -556,7 +551,7 @@ static ssize_t  msm_bus_dbg_update_reque
 	int found = 0;
 	uint32_t clid;
 	ssize_t res = cnt;
-
+	
 	if (!buf || IS_ERR(buf)) {
 		MSM_BUS_ERR("Memory allocation for buffer failed\n");
 		return -ENOMEM;
@@ -569,10 +564,11 @@ static ssize_t  msm_bus_dbg_update_reque
 		res = -EFAULT;
 		goto out;
 	}
+
 	buf[cnt] = '\0';
 	chid = buf;
 	MSM_BUS_DBG("buffer: %s\n size: %zu\n", buf, sizeof(ubuf));
-
+	
 	rt_mutex_lock(&msm_bus_dbg_cllist_lock);
 	list_for_each_entry(cldata, &cl_list, list) {
 		if (strnstr(chid, cldata->pdata->name, cnt)) {
@@ -606,9 +602,9 @@ static ssize_t  msm_bus_dbg_update_reque
 		}
 	}
 	rt_mutex_unlock(&msm_bus_dbg_cllist_lock);
-
 	if (found)
 		msm_bus_scale_client_update_request(clid, index);
+	
 
 out:
 	kfree(buf);
@@ -731,7 +727,6 @@ static int msm_bus_dbg_fill_fab_buffer(c
 		mutex_unlock(&msm_bus_dbg_fablist_lock);
 		return -ENOENT;
 	}
-
 	if (fablist->file == NULL) {
 		MSM_BUS_DBG("Fabric dbg entry does not exist\n");
 		mutex_unlock(&msm_bus_dbg_fablist_lock);
@@ -922,7 +917,6 @@ static int __init msm_bus_debugfs_init(v
 		MSM_BUS_ERR("Failed to alloc rules_buf");
 		goto err;
 	}
-
 	rt_mutex_lock(&msm_bus_dbg_cllist_lock);
 	list_for_each_entry(cldata, &cl_list, list) {
 		if (cldata->pdata) {
@@ -944,7 +938,6 @@ static int __init msm_bus_debugfs_init(v
 		}
 	}
 	rt_mutex_unlock(&msm_bus_dbg_cllist_lock);
-
 	if (debugfs_create_file("dump_clients", S_IRUGO | S_IWUSR,
 		clients, NULL, &msm_bus_dbg_dump_clients_fops) == NULL)
 		goto err;

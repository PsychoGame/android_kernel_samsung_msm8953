--- original/drivers/usb/gadget/function/f_mbim.c	2020-05-07 11:40:16.616312624 +0200
+++ changed/drivers/usb/gadget/function/f_mbim.c	2019-06-03 13:39:52.000000000 +0200
@@ -768,8 +768,6 @@ static void mbim_notify_complete(struct
 	struct f_mbim			*mbim = req->context;
 	struct usb_cdc_notification	*event = req->buf;
 
-	pr_debug("dev:%pK\n", mbim);
-
 	spin_lock(&mbim->lock);
 	switch (req->status) {
 	case 0:
@@ -797,7 +795,7 @@ static void mbim_notify_complete(struct
 
 	spin_unlock(&mbim->lock);
 
-	pr_debug("dev:%pK Exit\n", mbim);
+	pr_debug("%s: Exit\n", __func__);
 }
 
 static void mbim_ep0out_complete(struct usb_ep *ep, struct usb_request *req)
@@ -808,8 +806,6 @@ static void mbim_ep0out_complete(struct
 	struct f_mbim		*mbim = func_to_mbim(f);
 	struct mbim_ntb_input_size *ntb = NULL;
 
-	pr_debug("dev:%pK\n", mbim);
-
 	req->context = NULL;
 	if (req->status || req->actual != req->length) {
 		pr_err("Bad control-OUT transfer\n");
@@ -846,7 +842,7 @@ static void mbim_ep0out_complete(struct
 invalid:
 	usb_ep_set_halt(ep);
 
-	pr_err("dev:%pK Failed\n", mbim);
+	pr_err("%s: Failed\n", __func__);
 
 	return;
 }
@@ -1947,7 +1943,8 @@ mbim_write(struct file *fp, const char _
 
 	ret = usb_func_ep_queue(&dev->function, dev->not_port.notify,
 			   req, GFP_ATOMIC);
-	if (ret == -ENOTSUPP || (ret < 0 && ret != -EAGAIN && ret != -EBUSY)) {
+	if (ret == -ENOTSUPP || (ret < 0 && ret != -EAGAIN)) {
+		pr_err("drop ctrl pkt of len %d error %d\n", cpkt->len, ret);
 		spin_lock_irqsave(&dev->lock, flags);
 		/*
 		 * cpkt already freed if device disconnected while we
@@ -1960,7 +1957,6 @@ mbim_write(struct file *fp, const char _
 		}
 		dev->cpkt_drop_cnt++;
 		spin_unlock_irqrestore(&dev->lock, flags);
-		pr_err("drop ctrl pkt of len %d error %d\n", cpkt->len, ret);
 	} else {
 		ret = 0;
 	}

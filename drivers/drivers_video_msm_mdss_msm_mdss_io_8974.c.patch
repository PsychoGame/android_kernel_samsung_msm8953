--- original/drivers/video/msm/mdss/msm_mdss_io_8974.c	2020-05-07 08:31:26.138784073 +0200
+++ changed/drivers/video/msm/mdss/msm_mdss_io_8974.c	2019-06-03 13:39:53.000000000 +0200
@@ -22,6 +22,9 @@
 #include "mdss_dsi.h"
 #include "mdss_edp.h"
 #include "mdss_dsi_phy.h"
+#if defined(CONFIG_FB_MSM_MDSS_SAMSUNG)
+#include "samsung/ss_dsi_panel_common.h"
+#endif
 
 #define MDSS_DSI_DSIPHY_REGULATOR_CTRL_0	0x00
 #define MDSS_DSI_DSIPHY_REGULATOR_CTRL_1	0x04
@@ -1037,6 +1040,11 @@ static void mdss_dsi_8996_phy_config(str
 	void __iomem *base;
 	u32 data;
 	struct mdss_panel_info *pinfo;
+#if defined(CONFIG_FB_MSM_MDSS_SAMSUNG)
+	struct samsung_display_driver_data *vdd;
+
+	vdd = (struct samsung_display_driver_data *)ctrl->panel_data.panel_private;
+#endif
 
 	pd = &(((ctrl->panel_data).panel_info.mipi).dsi_phy_db);
 
@@ -1081,7 +1089,14 @@ static void mdss_dsi_8996_phy_config(str
 		}
 
 		/* test str */
-		MIPI_OUTP(base + 0x14, 0x0088);	/* fixed */
+#if defined(CONFIG_FB_MSM_MDSS_SAMSUNG)
+		if(vdd->dsiphy_drive_str)
+			MIPI_OUTP(base + 0x14, vdd->dsiphy_drive_str);
+		else
+			MIPI_OUTP(base + 0x14, 0x0088);	/* fixed */
+#else
+		MIPI_OUTP(base + 0x14, 0x0088); /* fixed */
+#endif
 
 		/* phy timing, 8 * 5 */
 		cnt = 8;
@@ -1843,6 +1858,7 @@ static int mdss_dsi_ulps_config(struct m
 			pr_err("%s: ULPS entry req failed for ctrl%d. Lane status=0x%08x\n",
 				__func__, ctrl->ndx, lane_status);
 			ret = -EINVAL;
+			MDSS_XLOG_TOUT_HANDLER("dsi0_ctrl", "dsi0_phy", "panic");
 			goto error;
 		}
 

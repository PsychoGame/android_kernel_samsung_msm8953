--- original/drivers/staging/android/ion/ion_system_heap.c	2020-05-07 08:31:25.465790127 +0200
+++ changed/drivers/staging/android/ion/ion_system_heap.c	2019-06-03 13:39:52.000000000 +0200
@@ -42,6 +42,7 @@ static const unsigned int orders[] = {9,
 static const unsigned int orders[] = {0};
 #endif
 
+static struct ion_system_heap *system_heap;
 static const int num_orders = ARRAY_SIZE(orders);
 static int order_to_index(unsigned int order)
 {
@@ -614,6 +615,48 @@ static int ion_system_heap_debug_show(st
 	return 0;
 }
 
+void show_ion_system_heap_pool_size(struct seq_file *s)
+{
+	unsigned long uncached = 0;
+	unsigned long cached = 0;
+	unsigned long secure = 0;
+	struct ion_page_pool *pool;
+	int i, j;
+
+	if (!system_heap) {
+		pr_err("system_heap_pool is not ready\n");
+		return;
+	}
+
+	for (i = 0; i < num_orders; i++) {
+		pool = system_heap->uncached_pools[i];
+		uncached += (1 << pool->order) * pool->high_count;
+		uncached += (1 << pool->order) * pool->low_count;
+	}
+
+	for (i = 0; i < num_orders; i++) {
+		pool = system_heap->cached_pools[i];
+		cached += (1 << pool->order) * pool->high_count;
+		cached += (1 << pool->order) * pool->low_count;
+	}
+
+	for (i = 0; i < num_orders; i++) {
+		for (j = 0; j < VMID_LAST; j++) {
+			if (!is_secure_vmid_valid(j))
+				continue;
+			pool = system_heap->secure_pools[j][i];
+			secure += (1 << pool->order) * pool->high_count;
+			secure += (1 << pool->order) * pool->low_count;
+		}
+	}
+
+	if (s)
+		seq_printf(s, "SystemHeapPool: %8lu kB\n",
+			   (uncached + cached + secure) << (PAGE_SHIFT - 10));
+	else
+		pr_cont("SystemHeapPool:%lukB ",
+			(uncached + cached + secure) << (PAGE_SHIFT - 10));
+}
 
 static void ion_system_heap_destroy_pools(struct ion_page_pool **pools)
 {
@@ -652,6 +695,24 @@ err_create_pool:
 	return 1;
 }
 
+void show_ion_system_heap_size(struct seq_file *s)
+{
+	struct ion_heap *heap;
+	unsigned long system_byte = 0;
+
+	if (!system_heap) {
+		pr_err("system_heap is not ready\n");
+		return;
+	}
+
+	heap = &system_heap->heap;
+	system_byte = (unsigned int)atomic_long_read(&heap->total_allocated);
+	if (s)
+		seq_printf(s, "SystemHeap:     %8lu kB\n", system_byte >> 10);
+	else
+		pr_cont("SystemHeap:%lukB ", system_byte >> 10);
+}
+
 struct ion_heap *ion_system_heap_create(struct ion_platform_heap *unused)
 {
 	struct ion_system_heap *heap;
@@ -690,6 +751,10 @@ struct ion_heap *ion_system_heap_create(
 		goto err_create_cached_pools;
 
 	heap->heap.debug_show = ion_system_heap_debug_show;
+	if (!system_heap)
+		system_heap = heap;
+	else
+		pr_err("system_heap had been already created\n");
 	return &heap->heap;
 
 err_create_cached_pools:

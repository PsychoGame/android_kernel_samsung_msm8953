--- original/drivers/staging/android/uapi/binder.h	2020-05-07 08:31:25.474790046 +0200
+++ changed/drivers/staging/android/uapi/binder.h	2019-06-03 13:39:52.000000000 +0200
@@ -86,6 +86,13 @@ enum flat_binder_object_flags {
 	 * scheduling policy from the caller (for synchronous transactions).
 	 */
 	FLAT_BINDER_FLAG_INHERIT_RT = 0x800,
+	/**
+	 * @FLAT_BINDER_FLAG_TXN_SECURITY_CTX: request security contexts
+	 *
+	 * Only when set, causes senders to include their security
+	 * context
+	 */
+	FLAT_BINDER_FLAG_TXN_SECURITY_CTX = 0x1000,
 };
 
 #ifdef BINDER_IPC_32BIT
@@ -253,7 +260,7 @@ struct binder_node_debug_info {
 #define BINDER_THREAD_EXIT		_IOW('b', 8, __s32)
 #define BINDER_VERSION			_IOWR('b', 9, struct binder_version)
 #define BINDER_GET_NODE_DEBUG_INFO	_IOWR('b', 11, struct binder_node_debug_info)
-
+#define BINDER_SET_CONTEXT_MGR_EXT	_IOW('b', 13, struct flat_binder_object)
 /*
  * NOTE: Two special error codes you should check for when calling
  * in to the driver are:
@@ -310,6 +317,11 @@ struct binder_transaction_data {
 		__u8	buf[8];
 	} data;
 };
+struct binder_transaction_data_secctx {
+	struct binder_transaction_data transaction_data;
+	binder_uintptr_t secctx;
+};
+
 
 struct binder_transaction_data_sg {
 	struct binder_transaction_data transaction_data;
@@ -345,7 +357,11 @@ enum binder_driver_return_protocol {
 
 	BR_OK = _IO('r', 1),
 	/* No parameters! */
-
+	BR_TRANSACTION_SEC_CTX = _IOR('r', 2,
+				      struct binder_transaction_data_secctx),
+	/*
+	 * binder_transaction_data_secctx: the received command.
+	 */
 	BR_TRANSACTION = _IOR('r', 2, struct binder_transaction_data),
 	BR_REPLY = _IOR('r', 3, struct binder_transaction_data),
 	/*

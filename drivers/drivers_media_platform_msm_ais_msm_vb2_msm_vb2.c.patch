--- original/drivers/media/platform/msm/ais/msm_vb2/msm_vb2.c	2020-05-07 11:40:16.507313666 +0200
+++ changed/drivers/media/platform/msm/ais/msm_vb2/msm_vb2.c	2019-06-03 13:39:50.000000000 +0200
@@ -46,23 +46,22 @@ int msm_vb2_buf_init(struct vb2_buffer *
 	struct msm_stream *stream;
 	struct msm_session *session;
 	struct msm_vb2_buffer *msm_vb2_buf;
-	unsigned long rl_flags;
 
 	session = msm_get_session_from_vb2q(vb->vb2_queue);
 	if (IS_ERR_OR_NULL(session))
 		return -EINVAL;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream_from_vb2q(vb->vb2_queue);
 	if (!stream) {
 		pr_err("%s: Couldn't find stream\n", __func__);
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return -EINVAL;
 	}
 	msm_vb2_buf = container_of(vb, struct msm_vb2_buffer, vb2_buf);
 	msm_vb2_buf->in_freeq = 0;
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 	return 0;
 }
 
@@ -71,7 +70,7 @@ static void msm_vb2_buf_queue(struct vb2
 	struct msm_vb2_buffer *msm_vb2;
 	struct msm_stream *stream;
 	struct msm_session *session;
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 
 	msm_vb2 = container_of(vb, struct msm_vb2_buffer, vb2_buf);
 
@@ -84,19 +83,19 @@ static void msm_vb2_buf_queue(struct vb2
 	if (IS_ERR_OR_NULL(session))
 		return;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream_from_vb2q(vb->vb2_queue);
 	if (!stream) {
 		pr_err("%s:%d] NULL stream", __func__, __LINE__);
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return;
 	}
 
 	spin_lock_irqsave(&stream->stream_lock, flags);
 	list_add_tail(&msm_vb2->list, &stream->queued_list);
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 }
 
 static void msm_vb2_buf_finish(struct vb2_buffer *vb)
@@ -104,7 +103,7 @@ static void msm_vb2_buf_finish(struct vb
 	struct msm_vb2_buffer *msm_vb2;
 	struct msm_stream *stream;
 	struct msm_session *session;
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 	struct msm_vb2_buffer *msm_vb2_entry, *temp;
 
 	msm_vb2 = container_of(vb, struct msm_vb2_buffer, vb2_buf);
@@ -118,12 +117,12 @@ static void msm_vb2_buf_finish(struct vb
 	if (IS_ERR_OR_NULL(session))
 		return;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream_from_vb2q(vb->vb2_queue);
 	if (!stream) {
 		pr_err("%s:%d] NULL stream", __func__, __LINE__);
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return;
 	}
 
@@ -136,7 +135,7 @@ static void msm_vb2_buf_finish(struct vb
 		}
 	}
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 }
 
 static void msm_vb2_stop_stream(struct vb2_queue *q)
@@ -144,19 +143,19 @@ static void msm_vb2_stop_stream(struct v
 	struct msm_vb2_buffer *msm_vb2, *temp;
 	struct msm_stream *stream;
 	struct msm_session *session;
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 	struct vb2_buffer *vb2_buf;
 
 	session = msm_get_session_from_vb2q(q);
 	if (IS_ERR_OR_NULL(session))
 		return;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream_from_vb2q(q);
 	if (!stream) {
 		pr_err_ratelimited("%s:%d] NULL stream", __func__, __LINE__);
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return;
 	}
 
@@ -175,7 +174,7 @@ static void msm_vb2_stop_stream(struct v
 			msm_vb2->in_freeq = 0;
 		}
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 }
 
 int msm_vb2_get_stream_state(struct msm_stream *stream)
@@ -253,17 +252,17 @@ static struct vb2_buffer *msm_vb2_get_bu
 	struct vb2_buffer *vb2_buf = NULL;
 	struct msm_session *session;
 	struct msm_vb2_buffer *msm_vb2 = NULL;
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 
 	session = msm_get_session(session_id);
 	if (IS_ERR_OR_NULL(session))
 		return NULL;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream(session, stream_id);
 	if (IS_ERR_OR_NULL(stream)) {
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return NULL;
 	}
 
@@ -289,7 +288,7 @@ static struct vb2_buffer *msm_vb2_get_bu
 	vb2_buf = NULL;
 end:
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 	return vb2_buf;
 }
 
@@ -300,18 +299,18 @@ static struct vb2_buffer *msm_vb2_get_bu
 	struct vb2_buffer *vb2_buf = NULL;
 	struct msm_session *session;
 	struct msm_vb2_buffer *msm_vb2 = NULL;
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 
 	session = msm_get_session(session_id);
 	if (IS_ERR_OR_NULL(session))
 		return NULL;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream(session, stream_id);
 
 	if (IS_ERR_OR_NULL(stream)) {
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return NULL;
 	}
 
@@ -335,7 +334,7 @@ static struct vb2_buffer *msm_vb2_get_bu
 	vb2_buf = NULL;
 end:
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 	return vb2_buf;
 }
 
@@ -347,17 +346,17 @@ static int msm_vb2_put_buf(struct vb2_bu
 	struct msm_vb2_buffer *msm_vb2;
 	struct vb2_buffer *vb2_buf = NULL;
 	int rc = 0;
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 
 	session = msm_get_session(session_id);
 	if (IS_ERR_OR_NULL(session))
 		return -EINVAL;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream(session, stream_id);
 	if (IS_ERR_OR_NULL(stream)) {
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return -EINVAL;
 	}
 
@@ -372,8 +371,6 @@ static int msm_vb2_put_buf(struct vb2_bu
 			pr_err("VB buffer is INVALID vb=%pK, ses_id=%d, str_id=%d\n",
 					vb, session_id, stream_id);
 			spin_unlock_irqrestore(&stream->stream_lock, flags);
-			read_unlock_irqrestore(&session->stream_rwlock,
-				rl_flags);
 			return -EINVAL;
 		}
 		msm_vb2 =
@@ -389,7 +386,7 @@ static int msm_vb2_put_buf(struct vb2_bu
 		rc = -EINVAL;
 	}
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 	return rc;
 }
 
@@ -397,7 +394,7 @@ static int msm_vb2_buf_done(struct vb2_b
 				unsigned int stream_id, uint32_t sequence,
 				struct timeval *ts, uint32_t reserved)
 {
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 	struct msm_vb2_buffer *msm_vb2;
 	struct msm_stream *stream;
 	struct vb2_buffer *vb2_buf = NULL;
@@ -408,11 +405,11 @@ static int msm_vb2_buf_done(struct vb2_b
 	if (IS_ERR_OR_NULL(session))
 		return -EINVAL;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream(session, stream_id);
 	if (IS_ERR_OR_NULL(stream)) {
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return -EINVAL;
 	}
 
@@ -427,8 +424,6 @@ static int msm_vb2_buf_done(struct vb2_b
 			pr_err("VB buffer is INVALID ses_id=%d, str_id=%d, vb=%pK\n",
 				    session_id, stream_id, vb);
 			spin_unlock_irqrestore(&stream->stream_lock, flags);
-			read_unlock_irqrestore(&session->stream_rwlock,
-				rl_flags);
 			return -EINVAL;
 		}
 		msm_vb2 =
@@ -449,7 +444,7 @@ static int msm_vb2_buf_done(struct vb2_b
 		rc = -EINVAL;
 	}
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 	return rc;
 }
 
@@ -460,18 +455,18 @@ long msm_vb2_return_buf_by_idx(int sessi
 	struct vb2_buffer *vb2_buf = NULL;
 	struct msm_session *session;
 	struct msm_vb2_buffer *msm_vb2 = NULL;
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 	long rc = -EINVAL;
 
 	session = msm_get_session(session_id);
 	if (IS_ERR_OR_NULL(session))
 		return rc;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream(session, stream_id);
 	if (IS_ERR_OR_NULL(stream)) {
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return -EINVAL;
 	}
 
@@ -499,14 +494,14 @@ long msm_vb2_return_buf_by_idx(int sessi
 
 end:
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 	return rc;
 }
 EXPORT_SYMBOL(msm_vb2_return_buf_by_idx);
 
 static int msm_vb2_flush_buf(int session_id, unsigned int stream_id)
 {
-	unsigned long flags, rl_flags;
+	unsigned long flags;
 	struct msm_vb2_buffer *msm_vb2;
 	struct msm_stream *stream;
 	struct vb2_buffer *vb2_buf = NULL;
@@ -516,11 +511,11 @@ static int msm_vb2_flush_buf(int session
 	if (IS_ERR_OR_NULL(session))
 		return -EINVAL;
 
-	read_lock_irqsave(&session->stream_rwlock, rl_flags);
+	read_lock(&session->stream_rwlock);
 
 	stream = msm_get_stream(session, stream_id);
 	if (IS_ERR_OR_NULL(stream)) {
-		read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+		read_unlock(&session->stream_rwlock);
 		return -EINVAL;
 	}
 
@@ -532,7 +527,7 @@ static int msm_vb2_flush_buf(int session
 		msm_vb2->in_freeq = 0;
 	}
 	spin_unlock_irqrestore(&stream->stream_lock, flags);
-	read_unlock_irqrestore(&session->stream_rwlock, rl_flags);
+	read_unlock(&session->stream_rwlock);
 	return 0;
 }
 
@@ -552,4 +547,3 @@ int msm_vb2_request_cb(struct msm_sd_req
 	req->flush_buf = msm_vb2_flush_buf;
 	return 0;
 }
-

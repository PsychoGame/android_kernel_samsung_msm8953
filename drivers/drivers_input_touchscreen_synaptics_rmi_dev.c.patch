--- original/drivers/input/touchscreen/synaptics_rmi_dev.c	2020-05-07 08:06:12.269281666 +0200
+++ changed/drivers/input/touchscreen/synaptics_rmi_dev.c	2019-06-03 13:39:50.000000000 +0200
@@ -73,19 +73,19 @@ struct rmidev_data {
 };
 
 static struct device_attribute attrs[] = {
-	__ATTR(open, S_IWUSR | S_IWGRP,
+	__ATTR(open, S_IWUSR,
 			NULL,
 			rmidev_sysfs_open_store),
-	__ATTR(release, S_IWUSR | S_IWGRP,
+	__ATTR(release, S_IWUSR,
 			NULL,
 			rmidev_sysfs_release_store),
-	__ATTR(address, S_IWUSR | S_IWGRP,
+	__ATTR(address, S_IWUSR,
 			NULL,
 			rmidev_sysfs_address_store),
-	__ATTR(length, S_IWUSR | S_IWGRP,
+	__ATTR(length, S_IWUSR,
 			NULL,
 			rmidev_sysfs_length_store),
-	__ATTR(data, (S_IWUSR | S_IWGRP),
+	__ATTR(data, S_IWUSR,
 			rmidev_sysfs_data_show,
 			rmidev_sysfs_data_store),
 };
@@ -307,26 +307,18 @@ static ssize_t rmidev_read(struct file *
 		return -EBADF;
 	}
 
-	mutex_lock(&(dev_data->file_mutex));
+	if (count == 0)
+		return 0;
 
 	if (count > (REG_ADDR_LIMIT - *f_pos))
 		count = REG_ADDR_LIMIT - *f_pos;
 
-	if (count == 0) {
-		retval = 0;
-		goto unlock;
-	}
+	tmpbuf = kzalloc(count + 1, GFP_KERNEL);
+	if (!tmpbuf)
+		return -ENOMEM;
 
-	if (*f_pos > REG_ADDR_LIMIT) {
-		retval = -EFAULT;
-		goto unlock;
-	}
+	mutex_lock(&(dev_data->file_mutex));
 
-	tmpbuf = kzalloc(count + 1, GFP_KERNEL);
-	if (!tmpbuf) {
-		retval = -ENOMEM;
-		goto unlock;
-	}
 	retval = rmidev->fn_ptr->read(rmidev->rmi4_data,
 			*f_pos,
 			tmpbuf,
@@ -340,9 +332,8 @@ static ssize_t rmidev_read(struct file *
 		*f_pos += retval;
 
 clean_up:
-	kfree(tmpbuf);
-unlock:
 	mutex_unlock(&(dev_data->file_mutex));
+	kfree(tmpbuf);
 	return retval;
 }
 
@@ -366,32 +357,23 @@ static ssize_t rmidev_write(struct file
 		return -EBADF;
 	}
 
-	mutex_lock(&(dev_data->file_mutex));
-
-	if (*f_pos > REG_ADDR_LIMIT) {
-		retval = -EFAULT;
-		goto unlock;
-	}
+	if (count == 0)
+		return 0;
 
 	if (count > (REG_ADDR_LIMIT - *f_pos))
 		count = REG_ADDR_LIMIT - *f_pos;
 
-	if (count == 0) {
-		retval = 0;
-		goto unlock;
-	}
-
 	tmpbuf = kzalloc(count + 1, GFP_KERNEL);
-	if (!tmpbuf) {
-		retval = -ENOMEM;
-		goto unlock;
-	}
+	if (!tmpbuf)
+		return -ENOMEM;
 
 	if (copy_from_user(tmpbuf, buf, count)) {
-		retval = -EFAULT;
-		goto clean_up;
+		kfree(tmpbuf);
+		return -EFAULT;
 	}
 
+	mutex_lock(&(dev_data->file_mutex));
+
 	retval = rmidev->fn_ptr->write(rmidev->rmi4_data,
 			*f_pos,
 			tmpbuf,
@@ -399,10 +381,8 @@ static ssize_t rmidev_write(struct file
 	if (retval >= 0)
 		*f_pos += retval;
 
-clean_up:
-	kfree(tmpbuf);
-unlock:
 	mutex_unlock(&(dev_data->file_mutex));
+	kfree(tmpbuf);
 	return retval;
 }
 

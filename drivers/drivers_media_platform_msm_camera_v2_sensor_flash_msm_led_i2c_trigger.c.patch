--- original/drivers/media/platform/msm/camera_v2/sensor/flash/msm_led_i2c_trigger.c	2020-05-07 08:31:23.683806159 +0200
+++ changed/drivers/media/platform/msm/camera_v2/sensor/flash/msm_led_i2c_trigger.c	2019-06-03 13:39:50.000000000 +0200
@@ -408,10 +408,13 @@ static int32_t msm_led_get_dt_data(struc
 		return -EINVAL;
 	}
 
-	fctrl->flashdata = kzalloc(sizeof(fctrl->flashdata),
-				GFP_KERNEL);
-	if (!fctrl->flashdata)
+	fctrl->flashdata = kzalloc(sizeof(
+		struct msm_camera_sensor_board_info),
+		GFP_KERNEL);
+	if (!fctrl->flashdata) {
+		pr_err("%s failed %d\n", __func__, __LINE__);
 		return -ENOMEM;
+	}
 
 	flashdata = fctrl->flashdata;
 	power_info = &flashdata->power_info;
@@ -443,6 +446,7 @@ static int32_t msm_led_get_dt_data(struc
 		rc = 0;
 	}
 
+	fctrl->pinctrl_info.use_pinctrl = false;
 	fctrl->pinctrl_info.use_pinctrl = of_property_read_bool(of_node,
 						"qcom,enable_pinctrl");
 	if (of_get_property(of_node, "qcom,flash-source", &count)) {
@@ -490,12 +494,15 @@ static int32_t msm_led_get_dt_data(struc
 				fctrl->flash_trigger_name[i],
 				&fctrl->flash_trigger[i]);
 		}
+
 	} else { /*Handle LED Flash Ctrl by GPIO*/
 		power_info->gpio_conf =
 			 kzalloc(sizeof(struct msm_camera_gpio_conf),
 				 GFP_KERNEL);
-		if (!power_info->gpio_conf)
-			return -ENOMEM;
+		if (!power_info->gpio_conf) {
+			rc = -ENOMEM;
+			return rc;
+		}
 		gconf = power_info->gpio_conf;
 
 		gpio_array_size = of_gpio_count(of_node);
@@ -503,8 +510,8 @@ static int32_t msm_led_get_dt_data(struc
 
 		if (gpio_array_size) {
 			gpio_array =
-				kcalloc(gpio_array_size, sizeof(uint16_t),
-					 GFP_KERNEL);
+				kzalloc((sizeof(uint16_t) * gpio_array_size),
+					GFP_KERNEL);
 			if (!gpio_array) {
 				rc = -ENOMEM;
 				goto ERROR4;

--- original/drivers/soc/qcom/boot_stats.c	2020-05-07 08:06:17.626229027 +0200
+++ changed/drivers/soc/qcom/boot_stats.c	2019-06-03 13:39:52.000000000 +0200
@@ -26,6 +26,7 @@
 #include <linux/export.h>
 #include <linux/types.h>
 #include <soc/qcom/boot_stats.h>
+#include <linux/sec_bsp.h>
 
 static void __iomem *mpm_counter_base;
 static uint32_t mpm_counter_freq;
@@ -71,6 +72,13 @@ static int mpm_parse_dt(void)
 
 static void print_boot_stats(void)
 {
+#if defined(CONFIG_SEC_BSP)
+	bootloader_start = readl_relaxed(&boot_stats->bootloader_start);
+	bootloader_end = readl_relaxed(&boot_stats->bootloader_end);
+	bootloader_display = readl_relaxed(&boot_stats->bootloader_display);
+	bootloader_load_kernel = readl_relaxed(&boot_stats->bootloader_load_kernel);
+#endif
+
 	pr_info("KPI: Bootloader start count = %u\n",
 		readl_relaxed(&boot_stats->bootloader_start));
 	pr_info("KPI: Bootloader end count = %u\n",
@@ -85,6 +93,17 @@ static void print_boot_stats(void)
 		mpm_counter_freq);
 }
 
+#if defined(CONFIG_SEC_BSP)
+unsigned int get_boot_stat_time(void)
+{
+	return readl_relaxed(mpm_counter_base);
+}
+unsigned int get_boot_stat_freq(void)
+{
+	return mpm_counter_freq;
+}
+#endif
+
 unsigned long long int msm_timer_get_sclk_ticks(void)
 {
 	unsigned long long int t1, t2;
@@ -139,6 +158,9 @@ int boot_stats_init(void)
 int boot_stats_exit(void)
 {
 	iounmap(boot_stats);
+#if !defined(CONFIG_SEC_BSP)
 	iounmap(mpm_counter_base);
+#endif
+
 	return 0;
 }

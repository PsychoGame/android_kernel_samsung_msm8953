--- original/drivers/usb/gadget/function/f_mtp.c	2020-05-07 08:31:25.895786259 +0200
+++ changed/drivers/usb/gadget/function/f_mtp.c	2019-06-03 13:39:52.000000000 +0200
@@ -58,7 +58,7 @@
 #define STATE_ERROR                 4   /* error from completion routine */
 
 /* number of tx and rx requests to allocate */
-#define MTP_TX_REQ_MAX 8
+#define MTP_TX_REQ_MAX 4
 #define RX_REQ_MAX 2
 #define INTR_REQ_MAX 5
 
@@ -818,6 +818,11 @@ static void send_file_work(struct work_s
 	offset = dev->xfer_file_offset;
 	count = dev->xfer_file_length;
 
+	if (count < 0) {
+		dev->xfer_result = -EINVAL;
+		return;
+	}
+
 	DBG(cdev, "send_file_work(%lld %lld)\n", offset, count);
 
 	if (dev->xfer_send_header) {
@@ -937,6 +942,11 @@ static void receive_file_work(struct wor
 	offset = dev->xfer_file_offset;
 	count = dev->xfer_file_length;
 
+	if (count < 0) {
+		dev->xfer_result = -EINVAL;
+		return;
+	}
+
 	DBG(cdev, "receive_file_work(%lld)\n", count);
 	if (!IS_ALIGNED(count, dev->ep_out->maxpacket))
 		DBG(cdev, "%s- count(%lld) not multiple of mtu(%d)\n", __func__,
@@ -1401,6 +1411,7 @@ mtp_function_bind(struct usb_configurati
 	dev->mtp_rx_req_len = mtp_rx_req_len;
 	dev->mtp_tx_req_len = mtp_tx_req_len;
 	dev->mtp_tx_reqs = mtp_tx_reqs;
+
 	/* allocate interface ID(s) */
 	id = usb_interface_id(c, f);
 	if (id < 0)

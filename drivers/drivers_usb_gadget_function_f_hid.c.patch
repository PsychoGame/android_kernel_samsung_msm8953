--- original/drivers/usb/gadget/function/f_hid.c	2020-05-07 08:53:30.887121251 +0200
+++ changed/drivers/usb/gadget/function/f_hid.c	2019-06-03 13:39:52.000000000 +0200
@@ -197,13 +197,13 @@ static ssize_t f_hidg_read(struct file *
 	/* pick the first one */
 	list = list_first_entry(&hidg->completed_out_req,
 				struct f_hidg_req_list, list);
-
-	/*
-	 * Remove this from list to protect it from beign free()
-	 * while host disables our function
-	 */
-	list_del(&list->list);
-
+	
+    /*
+     * Remove this from list to protect it from beign free()
+     * while host disables our function
+     */
+    list_del(&list->list);
+	
 	req = list->req;
 	count = min_t(unsigned int, count, req->actual - list->pos);
 	spin_unlock_irqrestore(&hidg->spinlock, flags);
@@ -224,8 +224,8 @@ static ssize_t f_hidg_read(struct file *
 		req->length = hidg->report_length;
 		ret = usb_ep_queue(hidg->out_ep, req, GFP_KERNEL);
 		if (ret < 0) {
-			free_ep_req(hidg->out_ep, req);
-			return ret;
+            free_ep_req(hidg->out_ep, req);
+            return ret;
 		}
 	} else {
 		spin_lock_irqsave(&hidg->spinlock, flags);
@@ -467,14 +467,14 @@ static void hidg_disable(struct usb_func
 {
 	struct f_hidg *hidg = func_to_hidg(f);
 	struct f_hidg_req_list *list, *next;
-        unsigned long flags;
+    unsigned long flags;
 
 	usb_ep_disable(hidg->in_ep);
 	hidg->in_ep->driver_data = NULL;
 
 	usb_ep_disable(hidg->out_ep);
 	hidg->out_ep->driver_data = NULL;
-
+	
 	spin_lock_irqsave(&hidg->spinlock, flags);
 	list_for_each_entry_safe(list, next, &hidg->completed_out_req, list) {
 		free_ep_req(hidg->out_ep, list->req);

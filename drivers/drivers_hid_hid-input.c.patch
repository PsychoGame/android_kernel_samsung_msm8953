--- original/drivers/hid/hid-input.c	2020-05-07 08:31:23.000812303 +0200
+++ changed/drivers/hid/hid-input.c	2019-06-03 13:39:50.000000000 +0200
@@ -93,6 +93,7 @@ static bool match_index(struct hid_usage
 
 typedef bool (*hid_usage_cmp_t)(struct hid_usage *usage,
 				unsigned int cur_idx, unsigned int val);
+extern bool lcd_is_on;
 
 static struct hid_usage *hidinput_find_key(struct hid_device *hid,
 					   hid_usage_cmp_t match,
@@ -931,6 +932,18 @@ static void hidinput_configure_usage(str
 		}
 		break;
 
+#ifdef CONFIG_USB_HMT_SAMSUNG_INPUT
+	case HID_UP_HMTVENDOR:
+		switch (usage->hid & HID_USAGE) {
+		case 0x001: map_key_clear(KEY_START_NOTA_CMD);		break;
+		case 0x002: map_key_clear(KEY_START_TA_CMD);		break;
+		case 0x003: map_key_clear(KEY_ONGOING_TA_CMD);		break;
+		case 0x004: map_key_clear(KEY_TA_STATUS_CMD);		break;
+		default: goto ignore;
+		}
+		break;
+#endif
+
 	default:
 	unknown:
 		if (field->report_size == 1) {
@@ -1247,6 +1260,11 @@ static void hidinput_led_worker(struct w
 	buf = hid_alloc_report_buf(report, GFP_KERNEL);
 	if (!buf)
 		return;
+	if(!lcd_is_on){
+		dbg_hid("lcd is off, don't report LED event\n");
+		kfree(buf);
+		return;
+	}
 
 	hid_output_report(report, buf);
 	/* synchronous output report */

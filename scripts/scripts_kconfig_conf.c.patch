--- original/scripts/kconfig/conf.c	2020-05-07 08:31:28.377763930 +0200
+++ changed/scripts/kconfig/conf.c	2019-06-03 13:39:54.000000000 +0200
@@ -488,6 +488,21 @@ static void conf_usage(const char *progn
 	printf("  --randconfig            New config with random answer to all options\n");
 }
 
+static void conf_check_read(const char *confname, const char *logmsg) {
+	const char *name;
+
+	name = getenv(confname);
+	printf("%s(%s)\n", confname, name);
+	if (name) {
+		if (conf_read_simple(name, S_DEF_USER, false)) {
+			fprintf(stderr, _("***\n"
+				"*** Can't find %s configuration \"%s\"!\n"
+				"***\n"), name, logmsg);
+			exit(1);
+		}
+	}
+}
+
 int main(int ac, char **av)
 {
 	const char *progname = av[0];
@@ -586,6 +601,69 @@ int main(int ac, char **av)
 				"***\n"), defconfig_file);
 			exit(1);
 		}
+
+		conf_check_read("KCONFIG_SELINUX", "selinux");
+		conf_check_read("KCONFIG_LOG_SELINUX", "log selinux");
+		conf_check_read("KCONFIG_TIMA", "tima log");
+		conf_check_read("KCONFIG_DMVERITY", "dmverity");
+		conf_check_read("KCONFIG_VARIANT", "variant");
+		conf_check_read("KCONFIG_DEBUG", "debug");
+		conf_check_read("KCONFIG_KASLR", "kaslr");
+		name = getenv("KCONFIG_SELINUX");
+		printf("KCONFIG_SELINUX(%s)\n", name);
+		if (name) {
+			if (conf_read_simple(name, S_DEF_USER, false)) {
+				printf(_("***\n"
+					"*** Can't find selinux configuration \"%s\"!\n"
+					"***\n"), name);
+				exit(1);
+			}
+		}
+
+		name = getenv("KCONFIG_LOG_SELINUX");
+		printf("KCONFIG_LOG_SELINUX(%s)\n", name);
+		if (name) {
+			if (conf_read_simple(name, S_DEF_USER, false)) {
+				printf(_("***\n"
+					"*** Can't find selinux log configuration \"%s\"!\n"
+					"***\n"), name);
+				exit(1);
+			}
+		}
+
+		name = getenv("KCONFIG_TIMA");
+		printf("KCONFIG_TIMA(%s)\n", name);
+		if (name) {
+			if (conf_read_simple(name, S_DEF_USER, false)) {
+				printf(_("***\n"
+					"*** Can't find tima log configuration \"%s\"!\n"
+					"***\n"), name);
+				exit(1);
+			}
+		}
+
+		name = getenv("KCONFIG_VARIANT");
+		printf("KCONFIG_VARIANT(%s)\n", name);
+		if (name) {
+			if (conf_read_simple(name, S_DEF_USER, false)) {
+				printf(_("***\n"
+					"*** Can't find variant configuration \"%s\"!\n"
+					"***\n"), name);
+				exit(1);
+			}
+		}
+
+		name = getenv("KCONFIG_DEBUG");
+		printf("KCONFIG_DEBUG(%s)\n", name);
+		if (name) {
+			if (conf_read_simple(name, S_DEF_USER, false)) {
+				printf(_("***\n"
+					"*** Can't find debug configuration \"%s\"!\n"
+					"***\n"), name);
+				exit(1);
+			}
+		}
+
 		break;
 	case savedefconfig:
 	case silentoldconfig:
@@ -604,7 +682,7 @@ int main(int ac, char **av)
 		if (!name)
 			break;
 		if ((strcmp(name, "") != 0) && (strcmp(name, "1") != 0)) {
-			if (conf_read_simple(name, S_DEF_USER)) {
+			if (conf_read_simple(name, S_DEF_USER, true)) {
 				fprintf(stderr,
 					_("*** Can't read seed configuration \"%s\"!\n"),
 					name);
@@ -620,8 +698,8 @@ int main(int ac, char **av)
 		case randconfig:	name = "allrandom.config"; break;
 		default: break;
 		}
-		if (conf_read_simple(name, S_DEF_USER) &&
-		    conf_read_simple("all.config", S_DEF_USER)) {
+		if (conf_read_simple(name, S_DEF_USER, true) &&
+		    conf_read_simple("all.config", S_DEF_USER, true)) {
 			fprintf(stderr,
 				_("*** KCONFIG_ALLCONFIG set, but no \"%s\" or \"all.config\" file found\n"),
 				name);
